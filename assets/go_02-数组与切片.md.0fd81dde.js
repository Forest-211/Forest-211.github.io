import{o as n,c as s,d as a,e as t}from"./app.0e01367e.js";const o='{"title":"数组与切片","description":"","frontmatter":{},"headers":[{"level":2,"title":"数组","slug":"数组"},{"level":3,"title":"简介","slug":"简介"},{"level":3,"title":"初始化数组","slug":"初始化数组"},{"level":3,"title":"访问数组元素","slug":"访问数组元素"},{"level":3,"title":"循环","slug":"循环"},{"level":3,"title":"修改数组中的元素","slug":"修改数组中的元素"},{"level":2,"title":"切片","slug":"切片"},{"level":3,"title":"简介","slug":"简介-1"},{"level":3,"title":"创建切片","slug":"创建切片"},{"level":3,"title":"切片的基本操作","slug":"切片的基本操作"}],"relativePath":"go/02-数组与切片.md","lastUpdated":1627659994976}',c={},p=a("h1",{id:"数组与切片"},[a("a",{class:"header-anchor",href:"#数组与切片","aria-hidden":"true"},"#"),t(" 数组与切片")],-1),e=a("h2",{id:"数组"},[a("a",{class:"header-anchor",href:"#数组","aria-hidden":"true"},"#"),t(" 数组")],-1),l=a("h3",{id:"简介"},[a("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),t(" 简介")],-1),u=a("p",null,"数组就是具有固定长度且拥有0个或者多个相同数据类型元素的集合；简单来说数组就是将同一类东西放到一起，然后派上序号",-1),i=a("h3",{id:"初始化数组"},[a("a",{class:"header-anchor",href:"#初始化数组","aria-hidden":"true"},"#"),t(" 初始化数组")],-1),k=a("ul",null,[a("li",null,[a("p",null,"声明一个长度、类型固定且没有赋初始值的数组"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// 声明一个长度为5的字符串数组"),t("\n"),a("span",{class:"token keyword"},"var"),t(" list "),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"5"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),t("\n")])])])]),a("li",null,[a("p",null,"声明一个长度、类型固定且有初始值的数组"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("language "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"java"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"python"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"go"'),a("span",{class:"token punctuation"},"}"),t("\n")])])])]),a("li",null,[a("p",null,"声明一个长度不固定、类型固定且有初始值的数组"),a("blockquote",null,[a("p",null,[t("如果在数组初始化时，不能确定有多少个元素，那么就可以在[]中用"),a("code",null,"···"),t("代替数字，这时数组的长度就由初始化数组的元素的个数来决定")])]),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("skill "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"mysql"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"mongoDB"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"redis"'),a("span",{class:"token punctuation"},"}"),t("\n")])])])])],-1),r=a("h3",{id:"访问数组元素"},[a("a",{class:"header-anchor",href:"#访问数组元素","aria-hidden":"true"},"#"),t(" 访问数组元素")],-1),g=a("p",null,"数组是有序集合，可以通过数组的索引来访问数组的元素，数组的索引是从0开始的",-1),d=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("language "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"java"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"python"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"go"'),a("span",{class:"token punctuation"},"}"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("language"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// go"),t("\n")])])],-1),h=a("h3",{id:"循环"},[a("a",{class:"header-anchor",href:"#循环","aria-hidden":"true"},"#"),t(" 循环")],-1),m=a("p",null,[t("循环就是自动完成一系列重复的功能块；可以通过"),a("code",null,"for"),t("、"),a("code",null,"for range")],-1),f=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// index为索引 item为数组中的元素"),t("\n"),a("span",{class:"token keyword"},"for"),t(" index"),a("span",{class:"token punctuation"},","),t(" item "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token keyword"},"range"),t(" front "),a("span",{class:"token punctuation"},"{"),t("\n  fmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"索引为%d的元素为：%s\\n"'),a("span",{class:"token punctuation"},","),t(" index"),a("span",{class:"token punctuation"},","),t(" item"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),v=a("p",null,"结果如下：",-1),b=a("img",{src:"/assets/image-20210717163342421.56a32c8c.png",alt:"image-20210717163342421",style:{zoom:"50%"}},null,-1),y=a("h3",{id:"修改数组中的元素"},[a("a",{class:"header-anchor",href:"#修改数组中的元素","aria-hidden":"true"},"#"),t(" 修改数组中的元素")],-1),P=a("p",null,"修改数组中的元素的语法与访问数组中的元素的语法类似；想要修改数组中的元素，需要先指定数组名和要修改的元素的索引，在指定该元素的新值",-1),j=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\nfront"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token string"},'"js"'),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("front"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [html css js typescript vue react 微信小程序]"),t("\n")])])],-1),w=a("h2",{id:"切片"},[a("a",{class:"header-anchor",href:"#切片","aria-hidden":"true"},"#"),t(" 切片")],-1),x=a("h3",{id:"简介-1"},[a("a",{class:"header-anchor",href:"#简介-1","aria-hidden":"true"},"#"),t(" 简介")],-1),G=a("p",null,"切片是相同类型元素的可变长度，通常表示为[]types，看上去很像数组，但是没长度",-1),E=a("p",null,"每个切片都有三部分组成：",-1),q=a("ul",null,[a("li",null,[a("p",null,"指向底层数组中某个元素的指针：指向数组的第一个从切片访问的元素，这个元素并不一定是数组的第一个元素；一个底层数组可以对一个多个切片，这些切片可以引用数组的任何位置，并且彼此之间的元素可以重叠")]),a("li",null,[a("p",null,"长度(length/len)：切片中的元素个数")]),a("li",null,[a("p",null,"容量(capacity/cap)：为切片分配的存储空间")])],-1),z=a("p",null,[t("切片在没有明确赋值初始值的时候，默认初始值为"),a("code",null,"nil"),t("，没有对应的底层数组，并且长度和容量都为0；所以切片只能和"),a("code",null,"nil"),t("比较；如果想检查切片是否为空，则可以使用"),a("code",null,"len(slice)==0")],-1),B=a("h3",{id:"创建切片"},[a("a",{class:"header-anchor",href:"#创建切片","aria-hidden":"true"},"#"),t(" 创建切片")],-1),D=a("ul",null,[a("li",null,[a("p",null,"直接创建"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(" hobby "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"篮球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"乒乓球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"游泳"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"健身"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"学习"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"阅读"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"coding"'),a("span",{class:"token punctuation"},"}"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("hobby"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [书法 篮球 乒乓球 游泳 健身 学习 阅读 coding]"),t("\n")])])])]),a("li",null,[a("p",null,"基于数组创建"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token comment"},"// 以 “切片名[start:end]” 的方式基于数组生成一个切片"),t("\nfrontEnd "),a("span",{class:"token operator"},":="),t(" front"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},":"),a("span",{class:"token punctuation"},"]"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("frontEnd"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [html css javascript typescript vue react 微信小程序]"),t("\n")])])]),a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"注意"),a("p",null,[t("Go语言的切片原则："),a("em",null,[a("strong",null,"左含右不含，传入的数字是元素的索引")]),t("；")]),a("ul",null,[a("li",null,[a("p",null,"只传开始不传结束时，表示从传入的元素索引开始到数组(切片)的最后一个元素结束"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\n\nstart "),a("span",{class:"token operator"},":="),t(" front"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},":"),a("span",{class:"token punctuation"},"]"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("start"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [javascript typescript vue react 微信小程序]"),t("\n")])])])]),a("li",null,[a("p",null,"只传入结束不传入开始时，表示从数组(切片)第一个元素的索引开始到传入的结束索引减1为止"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\n\nend "),a("span",{class:"token operator"},":="),t(" front"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},":"),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("end"),a("span",{class:"token punctuation"},")"),t(" \n")])])])]),a("li",null,[a("p",null,"既不传开始索引，也不传结束索引时，将整个数组(切片)的所有元素都包含其中"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\n\nfrontEnd "),a("span",{class:"token operator"},":="),t(" front"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},":"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token comment"},"// 以 “切片名[start:end]” 的方式基于数组生成一个切片"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("frontEnd"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [html css javascript typescript vue react 微信小程序]"),t("\n")])])])])])])]),a("li",null,[a("p",null,"使用make函数创建"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("create "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"make"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 长度和容量都为4"),t("\ncreate1 "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"make"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"6"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 长度为4，容量为6"),t("\n")])])]),a("blockquote",null,[a("p",null,"当长度和容量相等时可以省略容量")])])],-1),I=a("p",null,[t("可以把切片看作是对数组的简单封装，因为在每个切片的底层数据结构中，一定能回包含一个数组，所以数组也被称为切片的底层数组。切片可以看作是对数组连续片段的引用，既可以是部分数组，也可以是全部数组。"),a("em",null,[t("使用"),a("code",null,"len()"),t("可以获取切片的长度，使用"),a("code",null,"cap()"),t("可以获取容量的大小")])],-1),T=a("h3",{id:"切片的基本操作"},[a("a",{class:"header-anchor",href:"#切片的基本操作","aria-hidden":"true"},"#"),t(" 切片的基本操作")],-1),U=a("p",null,[t("Go语言中可以通过内置函数"),a("code",null,"append()"),t("，对切片实现新增、删除、替换、复制等功能")],-1),A=a("h4",{id:"新增"},[a("a",{class:"header-anchor",href:"#新增","aria-hidden":"true"},"#"),t(" 新增")],-1),C=a("p",null,[t("新增使用"),a("code",null,"append()"),t("方法来添加元素，返回一个新的切片，然后赋值给原来声明的切片")],-1),F=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("create "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"make"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 默认长度和容量都为4"),t("\ncreate "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"append"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"篮球"'),a("span",{class:"token punctuation"},")"),t("\ncreate "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"append"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},")"),t("\ncreate "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"append"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"游泳"'),a("span",{class:"token punctuation"},")"),t("\ncreate "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"append"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"健身"'),a("span",{class:"token punctuation"},")"),t("\ncreate "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"append"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"阅读"'),a("span",{class:"token punctuation"},")"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [ 篮球 书法 游泳 健身 阅读]"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"create的长度为：%d\\n"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token function"},"len"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 9"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"create的容量为： %d\\n"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token function"},"cap"),a("span",{class:"token punctuation"},"("),t("create"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 16"),t("\n")])])],-1),H=a("p",null,[t("切片的扩容不是改变原切片的底层数组，而是生成一个容量更大的底层数组，然后把原切片中的元素和新元素一起复制到新切片中；一般来说，可以简单认为新切片的容量是就切片的2倍；如果原切片的长度大于1024，则新切片的容量是旧切片的1.25倍；如果新长度超过原切片的容量，那么使用"),a("code",null,"append()"),t("函数对其追加元素时就不会引起扩容")],-1),J=a("h4",{id:"删除"},[a("a",{class:"header-anchor",href:"#删除","aria-hidden":"true"},"#"),t(" 删除")],-1),K=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(" hobby "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"篮球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"乒乓球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"游泳"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"健身"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"学习"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"阅读"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"coding"'),a("span",{class:"token punctuation"},"}"),t("\t\n"),a("span",{class:"token keyword"},"var"),t(" favorite "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"append"),a("span",{class:"token punctuation"},"("),t("hobby"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},":"),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),t(" hobby"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},":"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 这样就把“乒乓球”一项删除了"),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"favorite:"'),a("span",{class:"token punctuation"},","),t(" favorite"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// favorite: [书法 篮球 游泳 健身 学习 阅读 coding]"),t("\n")])])],-1),L=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,[t("注意这里使用三个点(...)，因为在使用"),a("code",null,"append()"),t("方法时，需要添加具体的每个单独的元素，而hobby是一个切片，所以Go语言用三个点(...)把一个切片打散成单独的元素，这样就可以使用"),a("code",null,"append()"),t("方法了")])],-1),M=a("h4",{id:"替换-更新"},[a("a",{class:"header-anchor",href:"#替换-更新","aria-hidden":"true"},"#"),t(" 替换/更新")],-1),N=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(" hobby "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"篮球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"乒乓球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"游泳"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"健身"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"学习"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"阅读"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"coding"'),a("span",{class:"token punctuation"},"}"),t("\nhobby"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token string"},'"硬笔书法"'),t("\nfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("hobby"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// [硬笔书法 篮球 乒乓球 游泳 健身 学习 阅读 coding]"),t("\n")])])],-1),O=a("h4",{id:"复制"},[a("a",{class:"header-anchor",href:"#复制","aria-hidden":"true"},"#"),t(" 复制")],-1),Q=a("p",null,"在实际工作中，经常需要根据基友的切片创建全新的切片；复制切片必须创建一个包含整个列表的切片；方法是同事省略起始位置的索引([:])，这时Go语言创建一个从第一个元素开始，到最后一个元素的切片元素结束的切片，即复制整个切片",-1),R=a("ul",null,[a("li",null,[a("p",null,"使用省略起始位置的方式复制"),a("blockquote",null,[a("p",null,"其实这种方式和基于数组的方式创建切片一样")]),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("front "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"html"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"css"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"javascript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"typescript"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"vue"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"react"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"微信小程序"'),a("span",{class:"token punctuation"},"}"),t("\nfrontEnd "),a("span",{class:"token operator"},":="),t(" front"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},":"),a("span",{class:"token punctuation"},"]"),t("\n")])])])]),a("li",null,[a("p",null,"使用内置函数的方式复制"),a("p",null,"Go语言的内置函数copy，可以把内容从一个数组切片复制到另一个数组切片；如果加入的两个数组切片大小不同，则按较小的按个数组切片来复制")])],-1),S=a("h4",{id:"遍历"},[a("a",{class:"header-anchor",href:"#遍历","aria-hidden":"true"},"#"),t(" 遍历")],-1),V=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"var"),t(" hobby "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"篮球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"乒乓球"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"游泳"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"健身"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"学习"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"阅读"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"coding"'),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"for"),t(" index"),a("span",{class:"token punctuation"},","),t(" item "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token keyword"},"range"),t(" hobby "),a("span",{class:"token punctuation"},"{"),t("\n  fmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"索引为%d的值为：%s \\n"'),a("span",{class:"token punctuation"},","),t(" index"),a("span",{class:"token punctuation"},","),t(" item"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),W=a("img",{src:"/assets/image-20210718230330740.9e8715f5.png",alt:"image-20210718230330740",style:{zoom:"50%"}},null,-1),X=a("p",null,[t("在Go语言中的"),a("code",null,"for rnage"),t("循环中，始终使用值拷贝的方式代替被遍历的元素本身，也就是"),a("code",null,"for range"),t("循环中的value是一个值拷贝，而不是元素本身")],-1);c.render=function(a,t,o,c,Y,Z){return n(),s("div",null,[p,e,l,u,i,k,r,g,d,h,m,f,v,b,y,P,j,w,x,G,E,q,z,B,D,I,T,U,A,C,F,H,J,K,L,M,N,O,Q,R,S,V,W,X])};export default c;export{o as __pageData};
