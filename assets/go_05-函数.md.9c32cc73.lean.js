import{o as n,c as s,d as a,e as t}from"./app.ee89e8a3.js";const o='{"title":"函数","description":"","frontmatter":{},"headers":[{"level":2,"title":"定义函数","slug":"定义函数"},{"level":3,"title":"传递参数","slug":"传递参数"},{"level":3,"title":"实际参数与形式参数","slug":"实际参数与形式参数"},{"level":3,"title":"位置参数","slug":"位置参数"},{"level":3,"title":"传递数组","slug":"传递数组"},{"level":3,"title":"传递切片","slug":"传递切片"},{"level":3,"title":"避免实参错误","slug":"避免实参错误"},{"level":2,"title":"返回值","slug":"返回值"},{"level":3,"title":"返回简单值","slug":"返回简单值"},{"level":3,"title":"返回map","slug":"返回map"},{"level":2,"title":"返回多个值","slug":"返回多个值"},{"level":2,"title":"函数变量","slug":"函数变量"},{"level":2,"title":"匿名函数","slug":"匿名函数"},{"level":3,"title":"匿名函数的定义","slug":"匿名函数的定义"},{"level":3,"title":"匿名函数的调用","slug":"匿名函数的调用"},{"level":3,"title":"剩余参数","slug":"剩余参数"},{"level":3,"title":"延迟函数调用（defer）","slug":"延迟函数调用（defer）"},{"level":3,"title":"panic","slug":"panic"},{"level":3,"title":"recover","slug":"recover"}],"relativePath":"go/05-函数.md","lastUpdated":1627977241785}',c={},e=a("h1",{id:"函数"},[a("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),t(" 函数")],-1),p=a("h2",{id:"定义函数"},[a("a",{class:"header-anchor",href:"#定义函数","aria-hidden":"true"},"#"),t(" 定义函数")],-1),l=a("p",null,"函数是带有名字的代码块，通过它可以更方便的完成重复性的工作。当程序在多次执行同一向任务时，无须反复编写该任务的代码，只需调用执行该任务的函数。",-1),u=a("p",null,"在Go语言中，完整的函数形式如下：",-1),i=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(" 函数名 "),a("span",{class:"token punctuation"},"("),t("参数列表"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"("),t("返回列表"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("函数体"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 示例"),t("\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token punctuation"},"{"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),k=a("blockquote",null,[a("ul",null,[a("li",null,"func： 声明函数的关键字"),a("li",null,"handleCalcSum：函数名称"),a("li",null,"x, y：参数列表；一组参数和参数类型，简称形参列表，具体值有调用者提供的实际参数传递进来"),a("li",null,"int：返回参数类型；可以是一个类型或者返回值"),a("li",null,"函数体：函数定义的代码集合")])],-1),r=a("p",null,[t("当函数返回未命名的返回值或没有返回值时，括号可以省略。当函数有返回值时，则必须显示的以"),a("code",null,"return"),t("语句结束")],-1),d=a("ul",null,[a("li",null,[a("p",null,"无返回值"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token comment"},"// 函数体"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])])]),a("li",null,[a("p",null,"返回值类型"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token comment"},"// 函数体"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])])]),a("li",null,[a("p",null,"返回具体值"),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"("),t("result "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  result "),a("span",{class:"token operator"},":="),t(" x "),a("span",{class:"token operator"},"*"),t(" y\n  "),a("span",{class:"token keyword"},"return"),t(" result\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])]),a("p",null,"上面代码中声明了具体的返回值，所以在返回的时候也可以不用写返回变量，代码如下："),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"("),t("result "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  result "),a("span",{class:"token operator"},":="),t(" x "),a("span",{class:"token operator"},"*"),t(" y\n  "),a("span",{class:"token keyword"},"return"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])])])],-1),m=a("p",null,"函数类型是函数签名，当有两个相同的参数列表和返回列表时，这两个函数的类型和签名是相同的；需要注意的是，即使参数和返回值的名称不同，也不会硬系那个函数类型。",-1),g=a("h3",{id:"传递参数"},[a("a",{class:"header-anchor",href:"#传递参数","aria-hidden":"true"},"#"),t(" 传递参数")],-1),f=a("p",null,"上面代码中函数计算和，我们来具体实现下呢",-1),b=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tsum "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"10"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"5"),a("span",{class:"token punctuation"},")"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"和为："'),a("span",{class:"token punctuation"},","),t(" sum"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 和为： 15"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"handleCalcSum"),a("span",{class:"token punctuation"},"("),t("x"),a("span",{class:"token punctuation"},","),t(" y "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"return"),t(" x "),a("span",{class:"token operator"},"+"),t(" y\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),h=a("p",null,[t("上面代码中，干了写什么呢，下面来一一探究；声明了一个处理计算和的函数("),a("code",null,"handleCalcSum()"),t(")，要求调用时需要传入两个"),a("code",null,"int"),t("类型的参数，返回这俩参数和；在"),a("code",null,"main"),t("函数中调用了这个计算函数，传入了两值，分别是：10和5；声明了一个sum的变量接受这个计算函数返回的结果")],-1),y=a("h3",{id:"实际参数与形式参数"},[a("a",{class:"header-anchor",href:"#实际参数与形式参数","aria-hidden":"true"},"#"),t(" 实际参数与形式参数")],-1),w=a("p",null,"实际参数就是在调用函数时，传给形参的实际的数据被称为实际参数，简称实参",-1),v=a("p",null,"形式参数就是在声明函数时，用于接受外部传入的数据被称为形式参数，简称形参；形式参数时函数的局部变量，初始值有调用者提供的实际参数传递进来的。函数的形参和命名返回值都是函数最外层的作用域变量。实参时安置传递的，所以函数接受到的是实参的副本，修改函数的形参不会改变调用者提供的实参，但是，如果提供的实参是引用类型，如切片、map、函数、指针、通道等，那么当函数使用形参时就可以改变实参的值。",-1),P=a("h3",{id:"位置参数"},[a("a",{class:"header-anchor",href:"#位置参数","aria-hidden":"true"},"#"),t(" 位置参数")],-1),C=a("p",null,"在调用函数时，Go语言必须将函数调用的每个参数都关联到传递函数定义的一个形参上，而最简单的关联方式就是基于实参的顺序进行关联，这种关联方式被称为位置实参",-1),x=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"Desc"),a("span",{class:"token punctuation"},"("),t("nickname"),a("span",{class:"token punctuation"},","),t(" motto "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"%s的座右铭是：%s\\n"'),a("span",{class:"token punctuation"},","),t(" nickname"),a("span",{class:"token punctuation"},","),t(" motto"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token function"},"Desc"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Forest"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"雪花不飘我不飘···"'),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// Forest的座右铭是：雪花不飘我不飘···"),t("\n")])])],-1),F=a("p",null,[t("上面代码中，定一个函数"),a("code",null,"Desc"),t("，它需要两个"),a("code",null,"string"),t("类型的形参，调用时需要按顺序传递参数；调用时"),a("code",null,"Desc()"),t("方法时，第一个参数关联到形参"),a("code",null,"nickname"),t("上，将第二个实参关联到"),a("code",null,"motto"),t("上；最后输出"),a("code",null,"Forest的座右铭是：雪花不飘我不飘···")],-1),q=a("p",null,"这种方式很好的证明了调用函数是一种效率极高的工作方式；我们只需要在函数中编写业务逻辑代码，设计好参数列表，当需要调用这个函数是，向它提供实参信息就完事，并且函数是可以重复使用的",-1),B=a("h3",{id:"传递数组"},[a("a",{class:"header-anchor",href:"#传递数组","aria-hidden":"true"},"#"),t(" 传递数组")],-1),G=a("p",null,"数组是按值传递，当调用一个函数时，每个传入的参数都会先创建一个副本，在赋值给对应的函数变量，所以函数接受的事一个副本，而不是原始参数；这种传递参数的方式，在传递大数组的时变得极为低效，而且在函数对数组的任何修改都只是副本上进行的，并不影响原数组",-1),S=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tbeer "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"雪花"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"燕京"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"勇闯"'),a("span",{class:"token punctuation"},"}"),t("\n\t"),a("span",{class:"token function"},"diet"),a("span",{class:"token punctuation"},"("),t("beer"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 雪花 不飘我不飘"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"diet"),a("span",{class:"token punctuation"},"("),t("liquor "),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"%s 不飘我不飘\\n"'),a("span",{class:"token punctuation"},","),t(" liquor"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n")])])],-1),T=a("p",null,"我们可以使用数组指针来修改，代码如下：",-1),H=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tbeer "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"雪花"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"燕京"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"勇闯"'),a("span",{class:"token punctuation"},"}"),t("\n\n\t"),a("span",{class:"token function"},"modify"),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"&"),t("beer"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 修改后的值为： &[乌苏 燕京 勇闯]"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"berr:"'),a("span",{class:"token punctuation"},","),t(" beer"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// berr: [乌苏 燕京 勇闯]"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"modify"),a("span",{class:"token punctuation"},"("),t("liquor "),a("span",{class:"token operator"},"*"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tliquor"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token string"},'"乌苏"'),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"修改后的值为："'),a("span",{class:"token punctuation"},","),t(" liquor"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),A=a("p",null,"以上代码最终执行后可以看出，原数组中的值已经被改了；使用数组指针是高效的，它允许被调用函数修改调用方数组中的元素",-1),D=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,"在使用指针修改的时候，应注意数组本身的特性；由于数组长度是固定的，因此数组本身并不可变，即不能添加或删除元素")],-1),_=a("h3",{id:"传递切片"},[a("a",{class:"header-anchor",href:"#传递切片","aria-hidden":"true"},"#"),t(" 传递切片")],-1),j=a("p",null,"在一些复杂的场景中，很有可能会传递切片；因为切片可以包含一个或者多个复杂的数据，比如map等等",-1),I=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"var"),t(" books "),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),t("\n\t\t"),a("span",{class:"token string"},'"四书"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"论语"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"80"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"大学"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"66"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"中庸"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"60"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"孟子"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"70"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t\t"),a("span",{class:"token string"},'"五经"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"周易"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"90"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"诗书"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"80"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"礼记"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"88"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"尚书"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"78"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"春秋"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"99"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t\t"),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"兰亭集序"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"66"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"九成宫碑"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"68"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"多宝塔"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"56"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t"),a("span",{class:"token punctuation"},"}"),t("\n\t"),a("span",{class:"token function"},"getBookPrice"),a("span",{class:"token punctuation"},"("),t("books"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 80"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"修改前的books："'),a("span",{class:"token punctuation"},","),t(" books"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 修改前的books： map[书法:map[九成宫碑:68 兰亭集序:66 多宝塔:56] 五经:map[周易:90 尚书:78 春秋:99 礼记:88 诗书:80] 四书:map[中庸:60 大学:66 孟子:70 论语:80]]"),t("\n\t"),a("span",{class:"token function"},"modifyBookPrice"),a("span",{class:"token punctuation"},"("),t("books"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// book: map[书法:map[九成宫碑:68 兰亭集序:66 多宝塔:56] 五经:map[周易:90 尚书:78 春秋:99 礼记:88 诗书:80] 四书:map[中庸:60 大学:66 孟子:70 论语:88]]"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"修改后的books:"'),a("span",{class:"token punctuation"},","),t(" books"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 修改后的books: map[书法:map[九成宫碑:68 兰亭集序:66 多宝塔:56] 五经:map[周易:90 尚书:78 春秋:99 礼记:88 诗书:80] 四书:map[中庸:60 大学:66 孟子:70 论语:88]]"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"getBookPrice"),a("span",{class:"token punctuation"},"("),t("book "),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"book:"'),a("span",{class:"token punctuation"},","),t(" book"),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},'"四书"'),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},'"论语"'),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"modifyBookPrice"),a("span",{class:"token punctuation"},"("),t("book "),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tbook"),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},'"四书"'),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},'"论语"'),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token number"},"88"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"book:"'),a("span",{class:"token punctuation"},","),t(" book"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),N=a("p",null,"上面打印结果可以看出，修改前(论语：80)和修改后(论语：88)的数据；至于为什么可以改变传入切片的数据呢？形参是函数的局部变量，初始值又调用方提供的实参传递；函数形参和返回值属于函数最外层作用域的局部变量。实参是按值传递的，函数接收的是每个实参的副本，所以修改函数的形参并不会影响调用提供的实参；如果调用方传入的是引用类型，那么当函数使用形参是就有可能间接的修改实参",-1),z=a("h3",{id:"避免实参错误"},[a("a",{class:"header-anchor",href:"#避免实参错误","aria-hidden":"true"},"#"),t(" 避免实参错误")],-1),E=a("p",null,"在调用函数时，必须要以声明函数所需的参数进行个数及类型的一一匹配；当提供的参数个数或者类型不匹配时，就会出现变异错误而导致程序运行失败",-1),L=a("h2",{id:"返回值"},[a("a",{class:"header-anchor",href:"#返回值","aria-hidden":"true"},"#"),t(" 返回值")],-1),M=a("p",null,[t("函数并非总是直接显示输出的，相反，我们经常使用函数处理一些数据，并返回一个或多个值；函数返回的值被称为返回值。在函数中，可以使用"),a("code",null,"return"),t("关键字将值返回到调用函数的代码中")],-1),R=a("h3",{id:"返回简单值"},[a("a",{class:"header-anchor",href:"#返回简单值","aria-hidden":"true"},"#"),t(" 返回简单值")],-1),U=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token punctuation"},"("),t("\n\t"),a("span",{class:"token string"},'"fmt"'),t("\n"),a("span",{class:"token punctuation"},")"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tbeer "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"雪花"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"燕京"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"勇闯"'),a("span",{class:"token punctuation"},"}"),t("\n\tresult "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"diet"),a("span",{class:"token punctuation"},"("),t("beer"),a("span",{class:"token punctuation"},")"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"result:"'),a("span",{class:"token punctuation"},","),t(" result"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// result: 雪花不飘我不飘"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"diet"),a("span",{class:"token punctuation"},"("),t("liquor "),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"string"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"%s 不飘我不飘\\n"'),a("span",{class:"token punctuation"},","),t(" liquor"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token keyword"},"return"),t(" liquor"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token string"},'"不飘我不飘"'),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),J=a("p",null,[t("上面代码中声明了一个"),a("code",null,"diet"),t("函数，需要传入一个数组，在"),a("code",null,"main()"),t("中调用返回一个字符串")],-1),K=a("h3",{id:"返回map"},[a("a",{class:"header-anchor",href:"#返回map","aria-hidden":"true"},"#"),t(" 返回map")],-1),O=a("p",null,"函数可以返回任何类型的值，包括切片和字典等复杂的数据结构",-1),Q=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token punctuation"},"("),t("\n\t"),a("span",{class:"token string"},'"fmt"'),t("\n"),a("span",{class:"token punctuation"},")"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"var"),t(" books "),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),t("\n\t\t"),a("span",{class:"token string"},'"四书"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"论语"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"80"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"大学"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"66"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"中庸"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"60"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"孟子"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"70"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t\t"),a("span",{class:"token string"},'"五经"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"周易"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"90"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"诗书"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"80"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"礼记"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"88"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"尚书"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"78"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"春秋"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"99"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t\t"),a("span",{class:"token string"},'"书法"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"兰亭集序"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"66"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"九成宫碑"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"68"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"多宝塔"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token number"},"56"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t"),a("span",{class:"token punctuation"},"}"),t("\n  \n\tres "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"getBook"),a("span",{class:"token punctuation"},"("),t("books"),a("span",{class:"token punctuation"},")"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"res:"'),a("span",{class:"token punctuation"},","),t(" res"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// res: map[中庸:60 大学:66 孟子:70 论语:88]"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 获取书籍"),t("\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"getBook"),a("span",{class:"token punctuation"},"("),t("book "),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"return"),t(" book"),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},'"四书"'),a("span",{class:"token punctuation"},"]"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),V=a("p",null,[t("上面代码中，声明了一个函数"),a("code",null,"getBook()"),t("，调用时需要传入一个map，然后返回一个map；在"),a("code",null,"main()"),t("中调用了"),a("code",null,"getBook()"),t("，传入一个为"),a("code",null,"books"),t("的map，"),a("code",null,"books"),t("是一个嵌套map，"),a("code",null,"getBook()"),t("将“四书”的数据获取后返回")],-1),W=a("h2",{id:"返回多个值"},[a("a",{class:"header-anchor",href:"#返回多个值","aria-hidden":"true"},"#"),t(" 返回多个值")],-1),X=a("p",null,"Go语言中可以让一个函数返回不止一个结果；大多数函数的返回值是两个，一个是返回数据，另一个返回的是数据存在与否的布尔值",-1),Y=a("p",null,"在很多场景下多会用到返回多个值的情景，比如获取切片、数组、map中的某个字段进行处理时，就会返回两个值；一个是数据源，另一个就是存在与否的布尔值，如下：",-1),Z=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token punctuation"},"("),t("\n\t"),a("span",{class:"token string"},'"fmt"'),t("\n"),a("span",{class:"token punctuation"},")"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"var"),t(" sports "),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"map"),a("span",{class:"token punctuation"},"["),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},"{"),t("\n\t\t"),a("span",{class:"token string"},'"ball"'),a("span",{class:"token punctuation"},":"),t("  "),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"basketball"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"pingpong"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"soccer"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"badminton"'),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t\t"),a("span",{class:"token string"},'"other"'),a("span",{class:"token punctuation"},":"),t(),a("span",{class:"token punctuation"},"{"),a("span",{class:"token string"},'"Martial arts"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"swimming"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"long run"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token string"},'"high jump"'),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n\t"),a("span",{class:"token punctuation"},"}"),t("\n  \n\tvalue"),a("span",{class:"token punctuation"},","),t(" exists "),a("span",{class:"token operator"},":="),t(" sports"),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},'"ball"'),a("span",{class:"token punctuation"},"]"),t("\n\t"),a("span",{class:"token keyword"},"if"),t(" exists "),a("span",{class:"token punctuation"},"{"),t("\n\t\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"value:"'),a("span",{class:"token punctuation"},","),t(" value"),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"else"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"没有你要获取的值！"'),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),$=a("p",null,[t("上面实力代码中，首先给一个要获取的捡，最终返回两个值("),a("code",null,"value"),t("，"),a("code",null,"exist"),t(")，"),a("code",null,"exist"),t("就是判断这个值是否存在要查找的键，它是一个布尔值；如果存在则进入第一个判断，打印"),a("code",null,"value"),t("；否则就打印“没有你要获取的值”")],-1),nn=a("p",null,"在日常开发中，我们可以给返回值命名，与函数的形参一样；在返回键被命名后，他们的值在函数开始初始化时就会被初始化为当前类型的零值；在函数执行过程中，如果返回的语句不怠任何参数，那么会返回对应的返回值变量",-1),sn=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,"在Go语言中，不要求强制命名返回值"),a("p",null,"如果调用了一个有多个返回值的函数或者方法，但是不需要某个返回值时，可以使用“_”来忽略这个返回值；比如："),a("div",{class:"language-go"},[a("pre",null,[a("code",null,[t("books"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token boolean"},"_"),t(),a("span",{class:"token operator"},"="),t(" http"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"GET"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"localhost:9090/api/v1/books"'),a("span",{class:"token punctuation"},")"),t("\n")])])])],-1),an=a("h2",{id:"函数变量"},[a("a",{class:"header-anchor",href:"#函数变量","aria-hidden":"true"},"#"),t(" 函数变量")],-1),tn=a("p",null,"与其他值一样，函数变量也有类型，既可以把函数变量赋值给变量，也可以传递函数变量，或者从其他函数返回函数变量。我们可以像使用普通变量一样使用函数变量，还可以把函数变量当作参数进行传递",-1),on=a("p",null,[t("函数变量类型的零值是"),a("code",null,"nil"),t("，如果调用了值为"),a("code",null,"nil"),t("的函数，则会导致宕机。通常使用"),a("code",null,"nil"),t("和函数变量来做判空比较")],-1),cn=a("h2",{id:"匿名函数"},[a("a",{class:"header-anchor",href:"#匿名函数","aria-hidden":"true"},"#"),t(" 匿名函数")],-1),en=a("p",null,"所谓匿名函数就是没有名字的函数，也被称为闭包。在Go语言中，匿名函数有一个没有函数名的函数声明和函数体组成。函数可以作为一种被赋值给函数类型的变量；匿名函数往往以变量的方式被传递；匿名函数与函数一样，可以像普通变量那样被传递或使用。匿名函数同样可以获取和更新外层函数的局部变量",-1),pn=a("h3",{id:"匿名函数的定义"},[a("a",{class:"header-anchor",href:"#匿名函数的定义","aria-hidden":"true"},"#"),t(" 匿名函数的定义")],-1),ln=a("p",null,"匿名函数可以被理解为没有名字的普通函数，其定义方式如下：",-1),un=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token punctuation"},"("),t("参数列表"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"("),t("返回值列表"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token comment"},"// 函数体"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),kn=a("p",null,"匿名函数是一个“内联”语句或表达式，匿名函数的优越性在于：可以直接使用函数内的变量，不必声明",-1),rn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"type"),t(" Hi "),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),t("num "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"string"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"sayHello"),a("span",{class:"token punctuation"},"("),t("num "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},","),t(" hi Hi"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tresult "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"hi"),a("span",{class:"token punctuation"},"("),t("num"),a("span",{class:"token punctuation"},")"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"result:"'),a("span",{class:"token punctuation"},","),t(" result"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token function"},"sayHello"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"10"'),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),t("num "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"string"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\t"),a("span",{class:"token keyword"},"return"),t(" num "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token string"},'"人打招呼"'),t("\n\t"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),dn=a("p",null,[t("上面代码中，"),a("code",null,"sayHello"),t("的第二个参数就是个匿名函数，类型是"),a("code",null,"func(num string)string"),t("；当调用"),a("code",null,"sayHello()"),t("方法时，第二个匿名函数的执行结果会返回给"),a("code",null,"result"),t("这个成员变量，然后将这个成员变量打印出来")],-1),mn=a("p",null,"匿名函数在Go语言中较为常见，这种方式定义的函数能够获取整个语法环境，里面的函数可以使用外层函数中的变量",-1),gn=a("h3",{id:"匿名函数的调用"},[a("a",{class:"header-anchor",href:"#匿名函数的调用","aria-hidden":"true"},"#"),t(" 匿名函数的调用")],-1),fn=a("h4",{id:"在定义时定义匿名函数"},[a("a",{class:"header-anchor",href:"#在定义时定义匿名函数","aria-hidden":"true"},"#"),t(" 在定义时定义匿名函数")],-1),bn=a("p",null,"匿名函数可以在声明后直接调用，也可以直接声明并调用",-1),hn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token comment"},"// 定义匿名函数并赋值给成员变量"),t("\n\tf "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),t("nickname "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"hi~ %s"'),a("span",{class:"token punctuation"},","),t(" nickname"),a("span",{class:"token punctuation"},")"),t(" \n\t"),a("span",{class:"token punctuation"},"}"),t("\n\t"),a("span",{class:"token function"},"f"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"Forest"'),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// hi~ Forest"),t("\n\n\t"),a("span",{class:"token comment"},"// 直接声明并调用"),t("\n\t"),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),t("email "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"我的邮箱是： %s"'),a("span",{class:"token punctuation"},","),t(" email"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 我的邮箱是： 767425412@qq.com"),t("\n\t"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"767425412@qq.com"'),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),yn=a("p",null,"匿名函数的用途非常广泛；匿名函数本省是一种值，可以方便地保存在各种容器中实现毁掉函数和操作封装",-1),wn=a("h4",{id:"用匿名函数作为回调函数"},[a("a",{class:"header-anchor",href:"#用匿名函数作为回调函数","aria-hidden":"true"},"#"),t(" 用匿名函数作为回调函数")],-1),vn=a("p",null,"回调函数简称“回调”(Callback即Call then back，被主函数调用运算后会返回主函数)，是指通过函数参数传递到其他代码的某一块可执行代码的引用",-1),Pn=a("p",null,[t("匿名函数作为回调函数来使用，在Go语言的系统包中是很常见的。在"),a("code",null,"strings"),t("包中就有这种实现：")],-1),Cn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"TrimFunc"),a("span",{class:"token punctuation"},"("),t("s "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},","),t(" f "),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),a("span",{class:"token builtin"},"rune"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"bool"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"string"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token function"},"TrimRightFunc"),a("span",{class:"token punctuation"},"("),a("span",{class:"token function"},"TrimLeftFunc"),a("span",{class:"token punctuation"},"("),t("s"),a("span",{class:"token punctuation"},","),t(" f"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},","),t(" f"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),xn=a("p",null,"可以使用匿名函数体作为参数，来实现对切片中的元素的遍历操作。代码如下：",-1),Fn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"visitPrint"),a("span",{class:"token punctuation"},"("),t("list "),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},","),t(" f "),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token boolean"},"_"),a("span",{class:"token punctuation"},","),t(" value "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token keyword"},"range"),t(" list "),a("span",{class:"token punctuation"},"{"),t("\n\t\t"),a("span",{class:"token function"},"f"),a("span",{class:"token punctuation"},"("),t("value"),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tsli "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"5"),a("span",{class:"token punctuation"},"}"),t("\n\n\t"),a("span",{class:"token function"},"visitPrint"),a("span",{class:"token punctuation"},"("),t("sli"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),t("i "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("i"),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 最后的打印结果："),t("\n"),a("span",{class:"token comment"},"// 1"),t("\n"),a("span",{class:"token comment"},"// 2"),t("\n"),a("span",{class:"token comment"},"// 3"),t("\n"),a("span",{class:"token comment"},"// 4"),t("\n"),a("span",{class:"token comment"},"// 5"),t("\n")])])],-1),qn=a("h3",{id:"剩余参数"},[a("a",{class:"header-anchor",href:"#剩余参数","aria-hidden":"true"},"#"),t(" 剩余参数")],-1),Bn=a("p",null,"剩余参数是指参数的个数是不确定的；在参数列表的类型名称之前使用省略号“...rest”作为一个剩余参数的容器。在调用这个函数时，可以传递改类型人意数目的参数；其实“...rest”就是个语法糖，可以把它看作rest类型的数组切片，即rest[]",-1),Gn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tsli "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"5"),a("span",{class:"token punctuation"},"}"),t("\n\n\t"),a("span",{class:"token function"},"visitPrint"),a("span",{class:"token punctuation"},"("),t("sli"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),t("i "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),t("i"),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),t("\n\tres "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"Total"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"5"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"6"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"7"),a("span",{class:"token punctuation"},")"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"res:"'),a("span",{class:"token punctuation"},","),t(" res"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 27"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"Total"),a("span",{class:"token punctuation"},"("),t("prices "),a("span",{class:"token operator"},"..."),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"int"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tresult "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token number"},"0"),t("\n\n\t"),a("span",{class:"token keyword"},"for"),t(),a("span",{class:"token boolean"},"_"),a("span",{class:"token punctuation"},","),t(" price "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token keyword"},"range"),t(" prices "),a("span",{class:"token punctuation"},"{"),t("\n\t\tresult "),a("span",{class:"token operator"},"+="),t(" price\n\t"),a("span",{class:"token punctuation"},"}"),t("\n\t"),a("span",{class:"token keyword"},"return"),t(" result\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),Sn=a("p",null,"下面是Go语言内置的Printf函数的定义：",-1),Tn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),t("format "),a("span",{class:"token builtin"},"string"),a("span",{class:"token punctuation"},","),t(" a "),a("span",{class:"token operator"},"..."),a("span",{class:"token keyword"},"interface"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"("),t("n "),a("span",{class:"token builtin"},"int"),a("span",{class:"token punctuation"},","),t(" err "),a("span",{class:"token builtin"},"error"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n  "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token function"},"Fprintf"),a("span",{class:"token punctuation"},"("),t("os"),a("span",{class:"token punctuation"},"."),t("Stdout"),a("span",{class:"token punctuation"},","),t(" format"),a("span",{class:"token punctuation"},","),t(" a"),a("span",{class:"token operator"},"..."),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),Hn=a("p",null,[t("用"),a("code",null,"interface{}"),t("可以传递任意类型的数据，并且"),a("code",null,"interface{}"),t("是类型安全的，因而使用"),a("code",null,"Printf()"),t("函数时，可以传入任意类型、个数不等的参数")],-1),An=a("h3",{id:"延迟函数调用（defer）"},[a("a",{class:"header-anchor",href:"#延迟函数调用（defer）","aria-hidden":"true"},"#"),t(" 延迟函数调用（defer）")],-1),Dn=a("h4",{id:"什么是defer"},[a("a",{class:"header-anchor",href:"#什么是defer","aria-hidden":"true"},"#"),t(" 什么是defer")],-1),_n=a("p",null,[t("在程序中，经常需要创建资源（比如：数据库连接、文件句柄、锁等等）；为了在函数执行完毕后及时地释放资源，Go的设计者提供"),a("code",null,"defer"),t("延迟语句")],-1),jn=a("p",null,[a("code",null,"defer"),t("语句主要用在函数中，用来在函数结束(return或者panic异常导致结束)之前执行某个动作，是一个函数结束前最后执行的工作")],-1),In=a("p",null,[t("在Go语言一个函数中，"),a("code",null,"defer"),t("语句的执行逻辑如下：")],-1),Nn=a("ul",null,[a("li",null,[t("当程序执行到一个"),a("code",null,"defer"),t("时，不会立即执行"),a("code",null,"defer"),t("后的语句，而是将"),a("code",null,"defer"),t("的语句压入一个存储"),a("code",null,"defer"),t("语句的栈中，然后继续执行函数下一个语句")]),a("li",null,[t("当函数执行完毕后，再从"),a("code",null,"defer"),t("栈中一次从顶取出执行（注意：先进去的最后执行，最后进去的先执行）")]),a("li",null,[t("在"),a("code",null,"defer"),t("将语句放入栈时，也会将相关的值赋值进入栈中")])],-1),zn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token function"},"deferCall"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"deferCall"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"defer"),t(),a("span",{class:"token function"},"funcA"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token keyword"},"defer"),t(),a("span",{class:"token function"},"funcB"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n\t"),a("span",{class:"token keyword"},"defer"),t(),a("span",{class:"token function"},"funcC"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"funcA"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"A"'),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"funcB"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"B"'),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"funcC"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"C"'),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 最后打印结果："),t("\n"),a("span",{class:"token comment"},"// C"),t("\n"),a("span",{class:"token comment"},"// B"),t("\n"),a("span",{class:"token comment"},"// A"),t("\n")])])],-1),En=a("h4",{id:"defer与return的执行顺序"},[a("a",{class:"header-anchor",href:"#defer与return的执行顺序","aria-hidden":"true"},"#"),t(" defer与return的执行顺序")],-1),Ln=a("p",null,[t("在一个函数体中，"),a("code",null,"defer"),t("和"),a("code",null,"return"),t("的调用顺序是怎样的？通过下面例子来观察下吧")],-1),Mn=a("div",{class:"language-go"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"package"),t(" main\n\n"),a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token string"},'"fmt"'),t("\n\n"),a("span",{class:"token keyword"},"var"),t(" name "),a("span",{class:"token builtin"},"string"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token string"},'"go"'),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"myFunc"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token builtin"},"string"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t"),a("span",{class:"token keyword"},"defer"),t(),a("span",{class:"token keyword"},"func"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\t\tname "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token string"},'"javascript"'),t("\n\t"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"myFunc()函数里的name：%s\\n"'),a("span",{class:"token punctuation"},","),t(" name"),a("span",{class:"token punctuation"},")"),t("\n\n\t"),a("span",{class:"token keyword"},"return"),t(" name\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"func"),t(),a("span",{class:"token function"},"main"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n\tmyName "),a("span",{class:"token operator"},":="),t(),a("span",{class:"token function"},"myFunc"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Printf"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"main()函数里的name： %s\\n"'),a("span",{class:"token punctuation"},","),t(" name"),a("span",{class:"token punctuation"},")"),t(" \n\tfmt"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"Println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"main()函数里的myname："'),a("span",{class:"token punctuation"},","),t(" myName"),a("span",{class:"token punctuation"},")"),t(" \n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),Rn=a("p",null,"运行结果如下：",-1),Un=a("img",{src:"/assets/image-20210727222303793.a13ccca9.png",alt:"image-20210727222303793",style:{zoom:"67%"}},null,-1),Jn=a("p",null,"看到上图结果后，还是来详细看看示例代码吧",-1),Kn=a("ul",null,[a("li",null,[t("首先声明了一个全局变量"),a("code",null,"name"),t("并赋了初始值“go”")]),a("li",null,[t("声明了一个函数"),a("code",null,"myFunc()"),t("返回一个字符串，其中里面是一个延迟执行的匿名回调函数，这个延迟函数的主要作用就是改变"),a("code",null,"name"),t("的值，然后返回"),a("code",null,"name")]),a("li",null,[t("在"),a("code",null,"main"),t("函数中调用了声明的"),a("code",null,"myFunc()"),t("函数")])],-1),On=a("p",null,[t("看到结果后为什么最后一行打印还是输入的“go”呢？解释只有一个——"),a("code",null,"defer"),t("执行是在"),a("code",null,"return"),t("之后才调用的匿名回调函数，所以在执行"),a("code",null,"defer"),t("前，"),a("code",null,"myFunc()"),t("已经被赋值成“go”")],-1),Qn=a("h4",{id:"defer常用应用场景"},[a("a",{class:"header-anchor",href:"#defer常用应用场景","aria-hidden":"true"},"#"),t(" defer常用应用场景")],-1),Vn=a("ul",null,[a("li",null,[a("p",null,"关闭资源"),a("p",null,[t("在创建资源（比如连接数据库、文件句柄、锁等等）后，需要释放掉资源内存，避免占用内存、系统资源。可以在打开资源的语句的下一行，直接使用"),a("code",null,"defer"),t("语句提前把关闭资源的操作注册了，这样会减少程序员忘写关闭资源的情况")])]),a("li",null,[a("p",null,"和recover()函数一起使用"),a("p",null,[t("当程序出现宕机或者遇到"),a("code",null,"panic"),t("错误时，"),a("code",null,"recover()"),t("函数可以恢复执行；而且不会报告宕机错误。之前说过，"),a("code",null,"defer"),t("不但可以在"),a("code",null,"return"),t("返回前调用，也可以在程序宕机显示"),a("code",null,"panic"),t("错误时，在程序出现宕机之前被执行，一次来恢复程序")])])],-1),Wn=a("h3",{id:"panic"},[a("a",{class:"header-anchor",href:"#panic","aria-hidden":"true"},"#"),t(" panic")],-1),Xn=a("p",null,[t("我们日常编写代码时是不会遇到"),a("code",null,"panic"),t("的，只有程序运行时才会遇到")],-1),Yn=a("p",null,[t("当程序引发"),a("code",null,"panic"),t("时，"),a("code",null,"panic"),t("的相关信息会被创建出来，并且该程序的控制权会立即从此行代码转交到调用其所属函数的那行代码上，即调用栈的上一级。方法的执行过程其实就是一个出栈的过程，在此行代码终止后，它会转移至上一级的调用代码处。如此反复，最终到达栈顶，也就是函数，对于主"),a("code",null,"goroutine"),t("来说就是"),a("code",null,"main"),t("函数。控制权被Go语言运行时系统回收，最终，程序崩溃并终止运行")],-1),Zn=a("p",null,[t("当程序发生意外时，甚至宕机时，会输出一条日志。这条日志包括宕机时的错误信息和函数调用的栈的调用信息，我们可以借助这些信息诊断问题的原因。"),a("code",null,"panic"),t("不会终止"),a("code",null,"defer"),t("语句的执行，逐层向上执行"),a("code",null,"panic"),t("，直到所属"),a("code",null,"goroutine"),t("中所有正在执行的函数都被终止为止")],-1),$n=a("h3",{id:"recover"},[a("a",{class:"header-anchor",href:"#recover","aria-hidden":"true"},"#"),t(" recover")],-1),ns=a("p",null,[a("strong",null,"recover"),t("(恢复)可处理程序运行时错误，种植错误处理流程。"),a("code",null,"recover()"),t("通常在一个使用"),a("code",null,"defer"),t("语句的函数中执行。如果没有在发生异常的"),a("code",null,"goroutine"),t("中明确调用"),a("code",null,"recover"),t("，可能会导致该"),a("code",null,"goroutine"),t("所属的进程打印异常信息后直接退出")],-1),ss=a("p",null,[t("如果在"),a("code",null,"defer"),t("语句中调用了"),a("code",null,"recover"),t("并且定义该"),a("code",null,"defer"),t("语句的函数发生了"),a("code",null,"panic"),t("，那么"),a("code",null,"recover"),t("会是程序从"),a("code",null,"panic"),t("中恢复，并返回"),a("code",null,"panic"),t("信息，导致"),a("code",null,"panic"),t("异常的函数不会继续运行，但能正常返回；若在未发生"),a("code",null,"panic"),t("时调用"),a("code",null,"recover"),t("，则"),a("code",null,"recover"),t("会返回"),a("code",null,"nil"),t("。如果发生"),a("code",null,"panic"),t("，但没有"),a("code",null,"recover"),t("那么久会终止运行")],-1);c.render=function(a,t,o,c,as,ts){return n(),s("div",null,[e,p,l,u,i,k,r,d,m,g,f,b,h,y,w,v,P,C,x,F,q,B,G,S,T,H,A,D,_,j,I,N,z,E,L,M,R,U,J,K,O,Q,V,W,X,Y,Z,$,nn,sn,an,tn,on,cn,en,pn,ln,un,kn,rn,dn,mn,gn,fn,bn,hn,yn,wn,vn,Pn,Cn,xn,Fn,qn,Bn,Gn,Sn,Tn,Hn,An,Dn,_n,jn,In,Nn,zn,En,Ln,Mn,Rn,Un,Jn,Kn,On,Qn,Vn,Wn,Xn,Yn,Zn,$n,ns,ss])};export default c;export{o as __pageData};
