import{o as n,c as s,d as e,e as t}from"./app.ee89e8a3.js";const a='{"title":"基础介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"思考","slug":"思考"},{"level":2,"title":"问题","slug":"问题"},{"level":3,"title":"是什么","slug":"是什么"},{"level":3,"title":"优势","slug":"优势"},{"level":3,"title":"应用场景","slug":"应用场景"},{"level":2,"title":"基础环境搭建","slug":"基础环境搭建"},{"level":3,"title":"node环境","slug":"node环境"},{"level":3,"title":"安装CLI工具","slug":"安装cli工具"},{"level":3,"title":"初始化项目","slug":"初始化项目"}],"relativePath":"front-end/nest/01.md","lastUpdated":1627978853524}',l={},o=e("h1",{id:"基础介绍"},[e("a",{class:"header-anchor",href:"#基础介绍","aria-hidden":"true"},"#"),t(" 基础介绍")],-1),p=e("p",null,[e("img",{src:"/assets/image-20210710202215869.87cf7d7e.png",alt:"image-20210710202215869"})],-1),r=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"环境及版本介绍"),e("p",null,"Node：v14.17.0"),e("p",null,"Npm: 7.15.0"),e("p",null,"Yarn: 1.22.10"),e("p",null,"Nest: 8.0.2")],-1),c=e("h2",{id:"思考"},[e("a",{class:"header-anchor",href:"#思考","aria-hidden":"true"},"#"),t(" 思考")],-1),i=e("blockquote",null,[e("p",null,"在学习之前我也对自己提出了一些学习nestjs的问题："),e("ul",null,[e("li",null,"什么是nestjs？"),e("li",null,"nestjs的优势是什么？"),e("li",null,"适合怎样的场景下使用？"),e("li",null,"为什么要用nestjs？官方有哪些现成的解决方案？")]),e("p",null,"下面我们就带着问题一一去寻找答案吧！")],-1),u=e("h2",{id:"问题"},[e("a",{class:"header-anchor",href:"#问题","aria-hidden":"true"},"#"),t(" 问题")],-1),d=e("h3",{id:"是什么"},[e("a",{class:"header-anchor",href:"#是什么","aria-hidden":"true"},"#"),t(" 是什么")],-1),k=e("p",null,"nestjs是用于构建高效、可靠、渐进式的服务器端应用程序。",-1),h=e("h3",{id:"优势"},[e("a",{class:"header-anchor",href:"#优势","aria-hidden":"true"},"#"),t(" 优势")],-1),g=e("ul",null,[e("li",null,"基于Node.js，对前端开发者们有着莫名的熟悉感。"),e("li",null,"高内聚低耦合，有一套成熟的开发规范。"),e("li",null,"TypeScript加持，使其程序健壮性有一定的保障。"),e("li",null,"生态活跃，有成熟的解决方案开箱即用； 比如：鉴权、日志、安全等等。")],-1),m=e("h3",{id:"应用场景"},[e("a",{class:"header-anchor",href:"#应用场景","aria-hidden":"true"},"#"),t(" 应用场景")],-1),f=e("ul",null,[e("li",null,"大型项目中台构建"),e("li",null,"微服务"),e("li",null,"......")],-1),j=e("h2",{id:"基础环境搭建"},[e("a",{class:"header-anchor",href:"#基础环境搭建","aria-hidden":"true"},"#"),t(" 基础环境搭建")],-1),v=e("h3",{id:"node环境"},[e("a",{class:"header-anchor",href:"#node环境","aria-hidden":"true"},"#"),t(" node环境")],-1),b=e("blockquote",null,[e("p",null,[t("如果没有安装的话，可以访问："),e("a",{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},"官网"),t(" 推荐使用长期支持版")])],-1),y=e("div",{class:"language-shell"},[e("pre",null,[e("code",null,[t("$ node -v\n// v14.17.0\n\n$ "),e("span",{class:"token function"},"npm"),t(" -v\n// "),e("span",{class:"token number"},"7.15"),t(".0\n")])])],-1),$=e("h3",{id:"安装cli工具"},[e("a",{class:"header-anchor",href:"#安装cli工具","aria-hidden":"true"},"#"),t(" 安装CLI工具")],-1),w=e("p",null,[e("a",{href:"https://docs.nestjs.com/",target:"_blank",rel:"noopener noreferrer"},"官网地址"),t(" 如果是Mac电脑的话，前面需要加上"),e("code",null,"sodu"),t("，加上后回车会让你输入笔记本的密码，输入时在控制台是看不到你自己输入的密码，输完后回车，就可以全局安装了，前提是密码没有输错；不加的话全局安装不了。")],-1),N=e("div",{class:"language-shell"},[e("pre",null,[e("code",null,[t("$ "),e("span",{class:"token function"},"npm"),t(" i -g @nestjs/cli\n")])])],-1),q=e("p",null,"安装完成后，使用如下命令检查cli版本",-1),x=e("div",{class:"language-shell"},[e("pre",null,[e("code",null,[t("$ nest -v\n// "),e("span",{class:"token number"},"8.0"),t(".2\n")])])],-1),I=e("h3",{id:"初始化项目"},[e("a",{class:"header-anchor",href:"#初始化项目","aria-hidden":"true"},"#"),t(" 初始化项目")],-1),_=e("blockquote",null,[e("p",null,[t("初始化项目有两种方式，一种拉取官方提供的模版，另一种就是使用cli工具创建（"),e("strong",null,"建议"),t("）。")])],-1),C=e("h4",{id:"拉取模版"},[e("a",{class:"header-anchor",href:"#拉取模版","aria-hidden":"true"},"#"),t(" 拉取模版")],-1),E=e("div",{class:"language-shell"},[e("pre",null,[e("code",null,[t("// 拉取项目\n$ "),e("span",{class:"token function"},"git"),t(" clone https://github.com/nestjs/typescript-starter.git project\n\n// 进入项目目录\n$ "),e("span",{class:"token builtin class-name"},"cd"),t(" project\n\n// 安装依赖\n$ "),e("span",{class:"token function"},"npm"),t(),e("span",{class:"token function"},"install"),t("\n\n// 运行项目\n$ "),e("span",{class:"token function"},"npm"),t(" run start\n")])])],-1),L=e("p",null,[t("项目启动成功后运行在3000端口，在浏览器中访问："),e("code",null,"http://localhost:3000")],-1),M=e("h4",{id:"脚手架创建"},[e("a",{class:"header-anchor",href:"#脚手架创建","aria-hidden":"true"},"#"),t(" 脚手架创建")],-1),A=e("div",{class:"language-shell"},[e("pre",null,[e("code",null,[t("$ nest new "),e("span",{class:"token punctuation"},"["),t("project-name"),e("span",{class:"token punctuation"},"]"),t(" // 比如：nest new learn\n")])])],-1),B=e("p",null,[t("创建成功后，可以查看项目目录和"),e("code",null,"package.json")],-1),D=e("h4",{id:"项目目录及配置文件"},[e("a",{class:"header-anchor",href:"#项目目录及配置文件","aria-hidden":"true"},"#"),t(" 项目目录及配置文件")],-1),P=e("div",{class:"language-tree"},[e("pre",null,[e("code",null,"learn                             \n├─ dist                           // 构建后的代码目录\n│  ├─ app.controller.d.ts         \n│  ├─ app.controller.js           \n│  ├─ app.controller.js.map       \n│  ├─ app.module.d.ts             \n│  ├─ app.module.js               \n│  ├─ app.module.js.map           \n│  ├─ app.service.d.ts            \n│  ├─ app.service.js              \n│  ├─ app.service.js.map          \n│  ├─ main.d.ts                   \n│  ├─ main.js                     \n│  ├─ main.js.map                 \n│  └─ tsconfig.build.tsbuildinfo  \n├─ src                            // 项目源码目录\n│  ├─ app.controller.spec.ts      \n│  ├─ app.controller.ts           \n│  ├─ app.module.ts               \n│  ├─ app.service.ts              \n│  └─ main.ts                     \n├─ test                          // 单元测试配置文件及项目业务测试文件 \n│  ├─ app.e2e-spec.ts             \n│  └─ jest-e2e.json               \n├─ .eslintrc.js \t\t\t\t // eslint\n├─ .gitignore \t\t\t\t\t // 配置git版本控制时的忽略文件\n├─ .prettierrc \t\t\t\t\t // prettier\n├─ nest-cli.json  \t\t\t\t // cli配置文件\n├─ package.json                  // 项目配置文件\n├─ README.md                     \n├─ tsconfig.build.json           // ts构建配置 \n├─ tsconfig.json                 // ts配置\n└─ yarn.lock                      \n")])],-1),R=e("p",null,[e("code",null,"package.json"),t("中的"),e("code",null,"scripts"),t("对象中的所有命令：")],-1),S=e("div",{class:"language-json"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"//......"),t("\n"),e("span",{class:"token property"},'"scripts"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t("\n    "),e("span",{class:"token property"},'"prebuild"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"rimraf dist"'),e("span",{class:"token punctuation"},","),t("                                      "),e("span",{class:"token comment"},"// 重新构建命令"),t("\n    "),e("span",{class:"token property"},'"build"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"nest build"'),e("span",{class:"token punctuation"},","),t("                                          "),e("span",{class:"token comment"},"// 项目打包命令"),t("\n    "),e("span",{class:"token property"},'"format"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"prettier --write \\"src/**/*.ts\\" \\"test/**/*.ts\\""'),e("span",{class:"token punctuation"},","),t("  "),e("span",{class:"token comment"},"// 格式化处理命令"),t("\n    "),e("span",{class:"token property"},'"start"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"nest start"'),e("span",{class:"token punctuation"},","),t("                                          "),e("span",{class:"token comment"},"// 默认启动脚本命令"),t("\n    "),e("span",{class:"token property"},'"start:dev"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"nest start --watch"'),e("span",{class:"token punctuation"},","),t("                              "),e("span",{class:"token comment"},"// 开发时代码变化监视的启动命令"),t("\n    "),e("span",{class:"token property"},'"start:debug"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"nest start --debug --watch"'),e("span",{class:"token punctuation"},","),t("                    "),e("span",{class:"token comment"},"// 调试的启动命令"),t("\n    "),e("span",{class:"token property"},'"start:prod"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"node dist/main"'),e("span",{class:"token punctuation"},","),t("                                 "),e("span",{class:"token comment"},"// 生产环境启动命令"),t("\n    "),e("span",{class:"token property"},'"lint"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"eslint \\"{src,apps,libs,test}/**/*.ts\\" --fix"'),e("span",{class:"token punctuation"},","),t("        "),e("span",{class:"token comment"},"// eslint检查修复命令"),t("\n    "),e("span",{class:"token property"},'"test"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"jest"'),e("span",{class:"token punctuation"},","),t("                                                 "),e("span",{class:"token comment"},"// 运行单元测试"),t("\n    "),e("span",{class:"token property"},'"test:watch"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"jest --watch"'),e("span",{class:"token punctuation"},","),t("                                   "),e("span",{class:"token comment"},"// 监听单元测试文件变化"),t("\n    "),e("span",{class:"token property"},'"test:cov"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"jest --coverage"'),e("span",{class:"token punctuation"},","),t("\n    "),e("span",{class:"token property"},'"test:debug"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand"'),e("span",{class:"token punctuation"},","),t("\n    "),e("span",{class:"token property"},'"test:e2e"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"jest --config ./test/jest-e2e.json"'),t("\n  "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},","),t("\n"),e("span",{class:"token comment"},"//......"),t("\n")])])],-1),T=e("p",null,"执行命令，启动项目：",-1),U=e("div",{class:"language-shell"},[e("pre",null,[e("code",null,[t("$ "),e("span",{class:"token function"},"yarn"),t(" start\nor\n$ "),e("span",{class:"token function"},"npm"),t(" run start\n")])])],-1),Y=e("p",null,[t("服务启动成功后；程序运行在3000端口（当然也可以在src/main.ts文件中的app.listen()方法中传入自定义的端口）；然后在浏览器中请求："),e("code",null,"http://localhost:3000")],-1),z=e("p",null,[e("img",{src:"/assets/image-20210710215711193.21e404eb.png",alt:"image-20210710215711193"})],-1),F=e("p",null,[e("img",{src:"/assets/image-20210710215812868.79af1981.png",alt:"image-20210710215812868"})],-1);l.render=function(e,t,a,l,G,H){return n(),s("div",null,[o,p,r,c,i,u,d,k,h,g,m,f,j,v,b,y,$,w,N,q,x,I,_,C,E,L,M,A,B,D,P,R,S,T,U,Y,z,F])};export default l;export{a as __pageData};
