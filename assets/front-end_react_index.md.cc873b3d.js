import{o as n,c as s,a,b as t}from"./app.19d22550.js";const o='{"title":"react","description":"","frontmatter":{},"headers":[{"level":2,"title":"react","slug":"react"},{"level":2,"title":"class 组件中生命周期 中文文档","slug":"class-组件中生命周期-中文文档"},{"level":2,"title":"class 与 hook","slug":"class-与-hook"},{"level":2,"title":"使用 hooks 的规则","slug":"使用-hooks-的规则"},{"level":2,"title":"useState","slug":"usestate"},{"level":2,"title":"useEffect：执行副作用","slug":"useeffect：执行副作用"},{"level":3,"title":"基本用法","slug":"基本用法"},{"level":2,"title":"useCallback：缓存回调函数","slug":"usecallback：缓存回调函数"},{"level":3,"title":"语法：","slug":"语法："},{"level":3,"title":"使用场景：","slug":"使用场景："},{"level":2,"title":"useMemo：缓存计算的结果","slug":"usememo：缓存计算的结果"},{"level":3,"title":"语法","slug":"语法"},{"level":3,"title":"使用场景","slug":"使用场景"},{"level":2,"title":"useRef：在多次渲染之间共享数据","slug":"useref：在多次渲染之间共享数据"},{"level":3,"title":"语法","slug":"语法-1"},{"level":3,"title":"使用场景：","slug":"使用场景：-1"},{"level":2,"title":"useContext：定义全局状态","slug":"usecontext：定义全局状态"},{"level":3,"title":"语法","slug":"语法-2"},{"level":3,"title":"使用场景","slug":"使用场景-1"}],"relativePath":"front-end/react/index.md","lastUpdated":1626963704856}',e={},c=a("h2",{id:"react"},[a("a",{class:"header-anchor",href:"#react","aria-hidden":"true"},"#"),t(" react")],-1),l=a("h2",{id:"class-组件中生命周期-中文文档"},[a("a",{class:"header-anchor",href:"#class-组件中生命周期-中文文档","aria-hidden":"true"},"#"),t(" class 组件中生命周期 "),a("a",{href:"https://zh-hans.reactjs.org/docs/react-component.html#constructor",target:"_blank",rel:"noopener noreferrer"},"中文文档")],-1),p=a("p",null,[a("img",{src:"/assets/image-20210602101742055.69560e1a.png",alt:"image-20210602101742055"})],-1),u=a("ul",null,[a("li",null,[a("p",null,"Mounting"),a("ul",null,[a("li",null,[a("code",null,"constructor()"),t(" 在 React 组件挂载之前，会调用它的构造函数")]),a("li",null,[a("code",null,"static getDerivedStateFromProps()"),t(" 在调用 render 方法之前调用，并且在初始挂载及后续更新时都会被调用。它应返回一个对象来更新 state，如果返回 null 则不更新任何内容。")]),a("li",null,[a("code",null,"render()"),t(" 是 class 组件中唯一必须实现的方法。返回一段 jsx 视图内容")]),a("li",null,[a("code",null,"componentDidMount()"),t(" 在组件挂载后（插入 DOM 树中）立即调用")])])]),a("li",null,[a("p",null,"Updating"),a("ul",null,[a("li",null,[a("code",null,"static getDerivedStateFromProps()")]),a("li",null,[a("code",null,"shouldComponentUpdate()"),t(" 判断 React 组件的输出是否受当前 state 或 props 更改的影响;默认行为是 state 每次发生变化组件都会重新渲染。")]),a("li",null,[t("r"),a("code",null,"ender()")]),a("li",null,[a("code",null,"getSnapshotBeforeUpdate()"),t(" 在最近一次渲染输出（提交到 DOM 节点）之前调用")]),a("li",null,[a("code",null,"componentDidUpdate()"),t(" 在更新后会被立即调用")])])]),a("li",null,[a("p",null,"Unmounting"),a("ul",null,[a("li",null,[a("code",null,"componentWillUnmount()"),t(" 在组件卸载及销毁之前直接调用")])])]),a("li",null,[a("p",null,"错误处理："),a("ul",null,[a("li",null,[a("code",null,"static getDerivedStateFromError()"),t(" 会在后代组件抛出错误后被调用")]),a("li",null,[a("code",null,"componentDidCatch()"),t(" 在后代组件抛出错误后被调用")])])])],-1),k=a("p",null,"Hooks: 就是把某个目标结果钩到某个可能会变化的数据原或者事件源上，那么当被钩到的数据或者事件发生变化时，产生这个目标的代码会重新执行，产生更新后的结果",-1),i=a("h2",{id:"class-与-hook"},[a("a",{class:"header-anchor",href:"#class-与-hook","aria-hidden":"true"},"#"),t(" class 与 hook")],-1),r=a("ul",null,[a("li",null,[a("p",null,"react 组件间不会相会继承的。不是不能用只是不推荐这样做，继承会让两个组件紧密耦合在一起，不太利于维护和逻辑复用。")]),a("li",null,[a("p",null,"因为所有的 UI 都是有状态驱动的，因此很少会在外部去调用一个类实例的方法；组件的所有方法都是在内部调用，或者作为生命周期方法被自动调用。")]),a("li",null,[a("p",null,"方便逻辑复用；在之前的 class 组件中要想逻辑复用就必须使用高阶组件等复杂的设计模式，而且高阶组件还会产生冗余的组件节点。")]),a("li",null,[a("p",null,[t("逻辑解藕；class 组件中，不得不把同一个业务逻辑的代码分散在类组件的不同生命周期的方法中，而"),a("code",null,"hooks"),t("则可以把业务逻辑清晰的隔开，让代码更加容易理解和维护")])]),a("li",null,[a("p",null,"class 组件与函数组件的对比图："),a("p",null,[a("img",{src:"/assets/f8a255ca1ec737a8ff5a40160e789fd5.d3db8cc0.png",alt:"img"}),t(" 图的左侧是 Class 组件，右侧是函数组件结合 Hooks。蓝色和黄色代表不同的业务功能。可以看到，在 Class 组件中，代码是从技术角度组织在一起的，例如在 componentDidMount 中都去做一些初始化的事情。而在函数组件中，代码是从业务角度组织在一起的，相关代码能够出现在集中的地方，从而更容易理解和维护。")])])],-1),d=a("h2",{id:"使用-hooks-的规则"},[a("a",{class:"header-anchor",href:"#使用-hooks-的规则","aria-hidden":"true"},"#"),t(" 使用 hooks 的规则")],-1),f=a("ul",null,[a("li",null,"只能在函数组件的顶级作用域使用；所谓顶层作用域就是不能在循环、条件判断、嵌套函数内使用。"),a("li",null,"只能在函数组件或者其他 hooks 中使用；一种是在函数内，另一种则是自定义的 hooks 内使用")],-1),g=a("h2",{id:"usestate"},[a("a",{class:"header-anchor",href:"#usestate","aria-hidden":"true"},"#"),t(" useState")],-1),m=a("blockquote",null,[a("p",null,"让函数组建具有维持状态的能力，也就是说在一个函数组建的多次渲染之间，这个 state 是共享的")],-1),h=a("ul",null,[a("li",null,[a("code",null,"useState()"),t("返回一个数组，数组中包含两个元素；第一个是初始化时的值，可以为任意类型；第二个是修改当前 state 的方法。")])],-1),w=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" useState "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n"),a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"Counter"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 创建一个保存 count 的 state，并给初始值 0"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("count"),a("span",{class:"token punctuation"},","),t(" setCount"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("p")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token punctuation"},"{"),t("count"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("p")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("button")]),t(),a("span",{class:"token attr-name"},"onClick"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token function"},"setCount"),a("span",{class:"token punctuation"},"("),t("count "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"+"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("button")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("\n    "),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" Counter\n")])])],-1),y=a("ul",null,[a("li",null,[t("如果要创建多个 state，就需要多次调用"),a("code",null,"useState()")])],-1),v=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// 声明多个state"),t("\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("age"),a("span",{class:"token punctuation"},","),t(" setAge"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"22"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("fruit"),a("span",{class:"token punctuation"},","),t(" setFruit"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'bannana'"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("isDone"),a("span",{class:"token punctuation"},","),t(" setIsDone"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token boolean"},"false"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),b=a("blockquote",null,[a("p",null,[t("Tips: 我们要遵循一个原则："),a("strong",null,"state 中用于不要保存可以通过计算得到的值"),t(" 比如：")])],-1),x=a("ul",null,[a("li",null,[t("从"),a("code",null,"props"),t("传递过来的值，有时候"),a("code",null,"props"),t("传递过来的值无法直接使用，而是要通过一定的计算后再在 UI 上展示，比如说排序。那么我们要做的就是每次使用的时候重新排序一下或者利用某些 cache 机制，而不是将结果直接放到 state 里")]),a("li",null,"从 URL 中读到的值。比如有时需要读取 URL 中的参数，把它作为组建的一部分；那么我们可以每次使用的时候从 URL 中读取，而不是读出来直接放到 state 里"),a("li",null,[t("从"),a("code",null,"cookie"),t("、"),a("code",null,"localStorage"),t("中读取的值。通常来说，也是每次要用的时候直接去读取，而不是读出来后放到 state 里")])],-1),C=a("h2",{id:"useeffect：执行副作用"},[a("a",{class:"header-anchor",href:"#useeffect：执行副作用","aria-hidden":"true"},"#"),t(" useEffect：执行副作用")],-1),S=a("p",null,[t("副作用是指一段和当前执行结果无关的代码。比如说要修改函数外部的某个变量，要发起一个请求等等，也就是说"),a("code",null,"useEffect"),t("中代码的执行是不影响渲染出来的 UI")],-1),j=a("h3",{id:"基本用法"},[a("a",{class:"header-anchor",href:"#基本用法","aria-hidden":"true"},"#"),t(" 基本用法")],-1),E=a("p",null,"useEffect 接收两个参数",-1),R=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),t("callback"),a("span",{class:"token punctuation"},","),t(" dependencies"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),T=a("ul",null,[a("li",null,"第一个为执行函数 callback"),a("li",null,"第二个为可选的依赖项数组 dependencies；依赖项是可选的，如果不传如的话，callback 就会在每次函数组建执行完后都执行；如果指定了，就只有依赖项中的值发生变化的时候才会执行")],-1),M=a("p",null,[a("strong",null,[a("code",null,"useEffect"),t("是每次组建"),a("code",null,"render"),t("完后判断依赖并执行")])],-1),I=a("p",null,"示例：展示文章的组件，组件接收一个文章的 id，当 id 放生变化时，组件就发起请求来获取文章内容；",-1),U=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" useEffect"),a("span",{class:"token punctuation"},","),t(" useState "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"Article"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token parameter"},"id"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 初始化变量保存内容"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("content"),a("span",{class:"token punctuation"},","),t(" setContent"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// useEffect的callback要避免直接的async函数，需要封装一下"),t("\n        "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"doAsync"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"async"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token comment"},"// 当id发生变化时，将当前内容清除以保持一致性"),t("\n            "),a("span",{class:"token function"},"setContent"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},")"),t("\n\n            "),a("span",{class:"token comment"},"// 发起请求获取数据"),t("\n            "),a("span",{class:"token keyword"},"const"),t(" result "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"await"),t(),a("span",{class:"token function"},"fetch"),a("span",{class:"token punctuation"},"("),a("span",{class:"token template-string"},[a("span",{class:"token template-punctuation string"},"`"),a("span",{class:"token string"},"/content/"),a("span",{class:"token interpolation"},[a("span",{class:"token interpolation-punctuation punctuation"},"${"),t("id"),a("span",{class:"token interpolation-punctuation punctuation"},"}")]),a("span",{class:"token template-punctuation string"},"`")]),a("span",{class:"token punctuation"},")"),t("\n\n            "),a("span",{class:"token comment"},"// 将获取到的数据放入content中"),t("\n            "),a("span",{class:"token function"},"setContent"),a("span",{class:"token punctuation"},"("),t("result"),a("span",{class:"token punctuation"},"."),t("data"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n\n        "),a("span",{class:"token function"},"doAsync"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),t("id"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token comment"},"// 使用id作为依赖项，变化时则执行副作用"),t("\n\n    "),a("span",{class:"token keyword"},"const"),t(" isLoading "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token operator"},"!"),t("content\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token punctuation"},"{"),t("isLoading "),a("span",{class:"token operator"},"?"),t(),a("span",{class:"token string"},"'loading……'"),t(),a("span",{class:"token operator"},":"),t(" content"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" Article\n")])])],-1),q=a("p",null,"useEffect 的特殊用法：",-1),D=a("ul",null,[a("li",null,[t("没有依赖项，则每次"),a("code",null,"render"),t("都会重新执行。")])],-1),z=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 每次render完执行一次"),t("\n    console"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"log"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'re-rendered'"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),L=a("ul",null,[a("li",null,[t("空数组作为依赖项，则只要在首次执行时触发，对应到"),a("code",null,"calss"),t("组件中的生命周期就是"),a("code",null,"componentDidMount")])],-1),B=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 组件首次渲染时执行，等价于class组件生命周期中的componnetDidMount"),t("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),P=a("ul",null,[a("li",null,[a("code",null,"useEffect"),t("还允许你返回一个函数，用于在组件销毁的时候做一些清理的操作。比如移除事件监听、清理定时器等等；相当于"),a("code",null,"class"),t("组件生命周期中"),a("code",null,"componentWillUnmount")])],-1),F=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(),a("span",{class:"token punctuation"},"{"),t(" useEffect"),a("span",{class:"token punctuation"},","),t(" useState "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"WindowSize"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("size"),a("span",{class:"token punctuation"},","),t(" setSize"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),t("window"),a("span",{class:"token punctuation"},"."),t("innerWidth"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"getSize"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(" window"),a("span",{class:"token punctuation"},"."),t("innerWidth\n\n    "),a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// 窗口大小变化事件处理函数"),t("\n        "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"handler"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token function"},"setSize"),a("span",{class:"token punctuation"},"("),a("span",{class:"token function"},"getSize"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n\n        "),a("span",{class:"token comment"},"// 监听resize事件"),t("\n        window"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"addEventListener"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'resize'"),a("span",{class:"token punctuation"},","),t(" handler"),a("span",{class:"token punctuation"},")"),t("\n\n        "),a("span",{class:"token comment"},"// 返回一个callback在组件销毁时调用"),t("\n        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token comment"},"// 移除resize事件"),t("\n            window"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"removeEventListener"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'resize'"),a("span",{class:"token punctuation"},","),t(" handler"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),t("size"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token punctuation"},"{"),t("size"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</")]),a("span",{class:"token punctuation"},">")]),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" WindowSize\n")])])],-1),K=a("blockquote",null,[a("p",null,[a("code",null,"useEffect"),t("让我们能够在下面四种时机去执行一个回调函数产生副作用：")]),a("ul",null,[a("li",null,[t("每次"),a("code",null,"render"),t("后执行：不提供第二个参数；比如："),a("code",null,"useEffect(()=>{})")]),a("li",null,[t("仅第一次"),a("code",null,"render"),t("后执行：提供一个空数组作为依赖项；比如："),a("code",null,"useEffect(()=>{}, [])")]),a("li",null,[t("第一次以及依赖项发生变化后执行：提供依赖项数组；比如："),a("code",null,"useEffect(()=>{}, [deps])")]),a("li",null,[t("组件 unmount 后执行：返回一个回调；比如："),a("code",null,"useEffect(()=>{ return ()=>{}}, [])")])])],-1),W=a("p",null,"Hooks 提供了让你监听某个数据变化的能力；这个变化可能会触发组件的刷新，也可能是去创建一个副作用，又或是刷新一个缓存；那么定义要监听那些数据变化的机制，其实就是指定 Hooks 的依赖项",-1),A=a("blockquote",null,[a("p",null,"Tips: 定义依赖项时，我们需要注意以下事项"),a("ul",null,[a("li",null,"依赖项中定义的变量是会在回调函数中用到的，否则声明依赖项其实是没有意义的 依赖项一般是一个常量数组，而不是一个变量；因为一般在创建 callback 的时候，你其实非常清楚其中要用到那些依赖项 React 会使用浅比较来对比依赖项是否发生了变化，所以要特别注意数组或者对象类型；如果你是每次创建一个新对象，即使和之前的值等价，也会被认为是依赖项发生了变化。这是一个刚开始使用 hooks 时很容易导致 Bug 的地方")])],-1),H=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"Sample"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 这里在每次组件执行时创建了一个新数组"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" todos "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"{"),t(" text"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'Learn hooks.'"),t(),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},"]"),t("\n    "),a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        console"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"log"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'Todos changed.'"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),t("todos"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),O=a("p",null,"代码的原意可能是在 todos 变化的时候去产生一些副作用，但是这里的 todos 变量是在函数内创建的，实际上每次都产生了一个新数组。所以在作为依赖项的时候进行引用的比较，实际上被认为是发生了变化的。",-1),_=a("h2",{id:"usecallback：缓存回调函数"},[a("a",{class:"header-anchor",href:"#usecallback：缓存回调函数","aria-hidden":"true"},"#"),t(" useCallback：缓存回调函数")],-1),V=a("h3",{id:"语法："},[a("a",{class:"header-anchor",href:"#语法：","aria-hidden":"true"},"#"),t(" 语法：")],-1),$=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token function"},"useCallback"),a("span",{class:"token punctuation"},"("),t("fn"),a("span",{class:"token punctuation"},","),t(" deps"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),G=a("ul",null,[a("li",null,"fn 是定义的回调函数"),a("li",null,"deps 是依赖的变量数组，只有当某个依赖变量发生变化时才会重新声明 fn 这个回调函数")],-1),J=a("h3",{id:"使用场景："},[a("a",{class:"header-anchor",href:"#使用场景：","aria-hidden":"true"},"#"),t(" 使用场景：")],-1),N=a("p",null,"比如下面的代码中，我们在加号按钮上定义了一个事件处理函数，用来让计数器加 1。但是因为定义是在函数组件内部，因此在多次渲染之间，是无法重用 handleIncrement 这个函数的，而是每次都需要创建一个新的：",-1),Q=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"Counter"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("     "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("count"),a("span",{class:"token punctuation"},","),t(" setCount"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("     "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"handleIncrement"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token function"},"setCount"),a("span",{class:"token punctuation"},"("),t("count "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),t("     "),a("span",{class:"token comment"},"// ...     return <button onClick={handleIncrement}>+</button>}"),t("\n")])])],-1),X=a("blockquote",null,[a("p",null,[t("每次组件状态发生变化的时候，函数组件实际上都会重新执行一遍；在每次执行的时候，实际上都会创建一个新的事件处理函数"),a("code",null,"handleIncrement"),t("，这个事件处理函数中包含了 count 这个变量的闭包，以确保每次能够得到正确的结果，这也意味着即使 count 没有发生变化，但是函数组件因为其他状态发生变化而重新渲染时，这种写法也会每次创建一个新的函数，创建一个新的事件处理函数，虽然不影响结果的正确性，但其实没必要的；因为这样做不仅增加了系统的开销，更重要的是每次创建新函数的方式会让接收事件处理函数的组件需要重新渲染。")])],-1),Y=a("p",null,[t("优化：当 count 发生变化的时候才重新定一个回调函数，这也正是"),a("code",null,"useCallback"),t("这个 hook 的作用")],-1),Z=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" useCallback"),a("span",{class:"token punctuation"},","),t(" useState "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"Counter"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("count"),a("span",{class:"token punctuation"},","),t(" setCount"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),t("    "),a("span",{class:"token keyword"},"const"),t(" handleIncrement "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useCallback"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token operator"},"=>"),a("span",{class:"token punctuation"},"{"),t("        "),a("span",{class:"token function"},"setCount"),a("span",{class:"token punctuation"},"("),t("count "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),t("    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),t("count"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("p")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token punctuation"},"{"),t("count"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("p")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("button")]),t(),a("span",{class:"token attr-name"},"onClick"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("handleIncrement"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"+"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("button")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("    "),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"}"),t("\n")])])],-1),nn=a("blockquote",null,[a("p",null,[t("这儿将 count 作为一个依赖传递给"),a("code",null,"useCallback"),t("，只有 count 发生变化的时候才需要重新创建一个回调，这样就保证了组件不会创建重复的回调函数；而是接收这个回调函数作为属性的组件，也不会频繁地需要重新渲染；除了"),a("code",null,"useCallback"),t("， "),a("code",null,"useMemo"),t("也是为了缓存而设计的，只不过"),a("code",null,"useCallback"),t("缓存函数，而"),a("code",null,"useMemo"),t("缓存的是计算的结果。")])],-1),sn=a("h2",{id:"usememo：缓存计算的结果"},[a("a",{class:"header-anchor",href:"#usememo：缓存计算的结果","aria-hidden":"true"},"#"),t(" useMemo：缓存计算的结果")],-1),an=a("h3",{id:"语法"},[a("a",{class:"header-anchor",href:"#语法","aria-hidden":"true"},"#"),t(" 语法")],-1),tn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token function"},"useMemo"),a("span",{class:"token punctuation"},"("),t("fn"),a("span",{class:"token punctuation"},","),t(" deps"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),on=a("ul",null,[a("li",null,[a("code",null,"fn"),t("是产生所需数据的一个计算函数，通常来说，"),a("code",null,"fn"),t("会使用"),a("code",null,"deps"),t("中声明的一些变量来生成一个结果，用来渲染出最终的 UI")])],-1),en=a("blockquote",null,[a("p",null,"如果某个数据是荣国其他数据得到的，那么只有当用到的数据，也就是依赖的数据发生变化的时候，才需要重新计算")],-1),cn=a("h3",{id:"使用场景"},[a("a",{class:"header-anchor",href:"#使用场景","aria-hidden":"true"},"#"),t(" 使用场景")],-1),ln=a("p",null,"一个显示用户信息的列表，现在需要对用户名进行搜索，且 UI 上需要根据搜索关键字显示过滤后的用户，那么这样一个功能需要有两个状态：",-1),pn=a("ul",null,[a("li",null,"用户列表数据本身：来自某个请求"),a("li",null,"搜索关键字：用户在搜索框输入的数据")],-1),un=a("p",null,[t("无论两个数据中的哪一个发生变化，搜需要过滤用户列表以获取需要展示的数据，不实用"),a("code",null,"useMemo"),t("的话，实现如下：")],-1),kn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" useEffect"),a("span",{class:"token punctuation"},","),t(" useMemo"),a("span",{class:"token punctuation"},","),t(" useState "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"List"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("users"),a("span",{class:"token punctuation"},","),t(" setUsers"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("searchKey"),a("span",{class:"token punctuation"},","),t(" setSearchKey"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"''"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token function"},"useEffect"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"doFetch"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"async"),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token keyword"},"const"),t(" result "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"await"),t(),a("span",{class:"token function"},"fetch"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'https://reqres.in/api/users'"),a("span",{class:"token punctuation"},")"),t("\n            "),a("span",{class:"token function"},"setUsers"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"await"),t(" result"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"json"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token punctuation"},"}"),t("\n        "),a("span",{class:"token function"},"doFetch"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token keyword"},"let"),t(" usersToShow "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),t("\n\n    "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("users"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n        usersToShow "),a("span",{class:"token operator"},"="),t(" users"),a("span",{class:"token punctuation"},"."),t("data"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"filter"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"user"),t(),a("span",{class:"token operator"},"=>"),t("\n            user"),a("span",{class:"token punctuation"},"."),t("first_name"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"includes"),a("span",{class:"token punctuation"},"("),t("searchKey"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("input")]),t("\n                "),a("span",{class:"token attr-name"},"type"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),t("text"),a("span",{class:"token punctuation"},'"')]),t("\n                "),a("span",{class:"token attr-name"},"value"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("searchKey"),a("span",{class:"token punctuation"},"}")]),t("\n                "),a("span",{class:"token attr-name"},"onChange"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),a("span",{class:"token parameter"},"e"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token function"},"setSearchKey"),a("span",{class:"token punctuation"},"("),t("e"),a("span",{class:"token punctuation"},"."),t("target"),a("span",{class:"token punctuation"},"."),t("value"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"}")]),t("\n            "),a("span",{class:"token punctuation"},"/>")]),a("span",{class:"token plain-text"},"\n\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("ul")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n                "),a("span",{class:"token punctuation"},"{"),t("usersToShow "),a("span",{class:"token operator"},"&&"),t("\n                    usersToShow"),a("span",{class:"token punctuation"},"."),t("length "),a("span",{class:"token operator"},">"),t(),a("span",{class:"token number"},"0"),t(),a("span",{class:"token operator"},"&&"),t("\n                    usersToShow"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"map"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"user"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n                        "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("li")]),t(),a("span",{class:"token attr-name"},"key"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("user"),a("span",{class:"token punctuation"},"."),t("id"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token punctuation"},"{"),t("user"),a("span",{class:"token punctuation"},"."),t("first_name"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("li")]),a("span",{class:"token punctuation"},">")]),t("\n                    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("ul")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("\n    "),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" List\n")])])],-1),rn=a("blockquote",null,[a("p",null,[t("上面代码中，无论组件如何进行都要一次重新渲染，实际上都需要进行一次过滤的操作；但是你只需要在 users 或者 searchKey 这两个某一个发生变化时，重新计算获得需要展示的数据就行了；那么这时候"),a("code",null,"useMemo"),t("这个 Hook 来实现这块的逻辑，缓存计算结果：")])],-1),dn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"// ...const usersToShow = useMemo(()=>{    if(!users) return null    return users.data.filter(user => user.first_name.includes(searchKey))}, [users, searchKey])// ..."),t("\n")])])],-1),fn=a("blockquote",null,[a("p",null,[t("这样就可以避免在用到的数据没发生变化是进行重复计算，这也是"),a("code",null,"useMemo"),t("的一大好处：避免重复计算")])],-1),gn=a("h2",{id:"useref：在多次渲染之间共享数据"},[a("a",{class:"header-anchor",href:"#useref：在多次渲染之间共享数据","aria-hidden":"true"},"#"),t(" useRef：在多次渲染之间共享数据")],-1),mn=a("blockquote",null,[a("p",null,[t("在类组建中，我们可以定义类的成员变量，一遍能在对象上通过成员属性去保存一些数据，函数组件对应的 hook 就是"),a("code",null,"useRef")])],-1),hn=a("h3",{id:"语法-1"},[a("a",{class:"header-anchor",href:"#语法-1","aria-hidden":"true"},"#"),t(" 语法")],-1),wn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"const"),t(" myRefContainer "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useRef"),a("span",{class:"token punctuation"},"("),t("initialValue"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),yn=a("p",null,[t("我们可以把 useRef 看作是在函数组件之外创建一个容器空间，在这个容器上，我们可以通过唯一的"),a("code",null,"current"),t("属性设置一个值，从而在函数组件的多次渲染之间共享这个值")],-1),vn=a("h3",{id:"使用场景：-1"},[a("a",{class:"header-anchor",href:"#使用场景：-1","aria-hidden":"true"},"#"),t(" 使用场景：")],-1),bn=a("p",null,[t("加入一个计时器组件，这个组件有开始和暂停两个功能，需要用 "),a("code",null,"window.setInterval"),t(" 来提供计时功能；而为了能够暂停，你就需要在某个地方保存这个 "),a("code",null,"window.setInterval"),t(" 返回的计数器的引用，确保在点击暂停按钮的同时，也能用 "),a("code",null,"window.clearInterval"),t(" 停止计时器。那么，这个保存计数器引用的最合适的地方，就是 "),a("code",null,"useRef"),t("，因为它可以存储跨渲染的数据。")],-1),xn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" useCallback"),a("span",{class:"token punctuation"},","),t(" useState"),a("span",{class:"token punctuation"},","),t(" useRef "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"Timer"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 用于保存计时的累计事件"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token punctuation"},"["),t("time"),a("span",{class:"token punctuation"},","),t(" setTime"),a("span",{class:"token punctuation"},"]"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useState"),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token comment"},"// 定义timer这样一个容器用于在跨组件渲染之间保存一个变量"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" timer "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useRef"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token comment"},"// 开始计时的事件处理函数"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" handleStart "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useCallback"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token keyword"},"if"),t(),a("span",{class:"token punctuation"},"("),t("timer"),a("span",{class:"token punctuation"},"."),t("current"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token keyword"},"return"),t("\n        timer"),a("span",{class:"token punctuation"},"."),t("current "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"setInterval"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n            "),a("span",{class:"token function"},"setTime"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"time"),t(),a("span",{class:"token operator"},"=>"),t(" time "),a("span",{class:"token operator"},"+"),t(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},")"),t("\n        "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token number"},"100"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token comment"},"// 暂停计时的事件处理函数"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" handlePause "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useCallback"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// 使用clearInterval 来停止计时"),t("\n        "),a("span",{class:"token function"},"clearInterval"),a("span",{class:"token punctuation"},"("),t("timer"),a("span",{class:"token punctuation"},"."),t("current"),a("span",{class:"token punctuation"},")"),t("\n        timer"),a("span",{class:"token punctuation"},"."),t("current "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token keyword"},"null"),t("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),t("\n\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token punctuation"},"{"),t("time "),a("span",{class:"token operator"},"/"),t(),a("span",{class:"token number"},"10"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token plain-text"}," seconds\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("button")]),t(),a("span",{class:"token attr-name"},"onClick"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("handleStart"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"start"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("button")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("button")]),t(),a("span",{class:"token attr-name"},"onClick"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("handlePause"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"pause"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("button")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("\n    "),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" Timer\n")])])],-1),Cn=a("p",null,[a("code",null,"useRef"),t("还有一个重要的功能就是保存某个 DOM 节点的引用；比如获取在点击某个按钮时让某个输入框获得焦点；代码如下：")],-1),Sn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" useRef "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"WithFocusButton"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" inputEl "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useRef"),a("span",{class:"token punctuation"},"("),a("span",{class:"token keyword"},"null"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"onButtonClick"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n        "),a("span",{class:"token comment"},"// current 属性指向了真是的input这个DOM即诶单，从而可以调用focus方法"),t("\n        inputEl"),a("span",{class:"token punctuation"},"."),t("current"),a("span",{class:"token punctuation"},"."),t("value "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token string"},"'focus'"),t("\n        inputEl"),a("span",{class:"token punctuation"},"."),t("current"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"focus"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token punctuation"},"}"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("input")]),t(),a("span",{class:"token attr-name"},"type"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),t("text"),a("span",{class:"token punctuation"},'"')]),t(),a("span",{class:"token attr-name"},"ref"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("inputEl"),a("span",{class:"token punctuation"},"}")]),t(),a("span",{class:"token attr-name"},"placeholder"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),t("点击按钮就可以聚焦"),a("span",{class:"token punctuation"},'"')]),t(),a("span",{class:"token punctuation"},"/>")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("button")]),t(),a("span",{class:"token attr-name"},"onClick"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("onButtonClick"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"button"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("button")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("\n    "),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" WithFocusButton\n")])])],-1),jn=a("h2",{id:"usecontext：定义全局状态"},[a("a",{class:"header-anchor",href:"#usecontext：定义全局状态","aria-hidden":"true"},"#"),t(" useContext：定义全局状态")],-1),En=a("p",null,[t("在 React 中组件数据流是自上而下的，且父子之间数据交互是通过"),a("code",null,"props"),t("进行数据共享的，如果要兄弟间、跨层级间数据共享的话就要涉及到"),a("strong",null,"全局状态管理"),t("----"),a("code",null,"useContext"),t("(也可以使用第三方依赖 redux、mobx、dva 等等)")],-1),Rn=a("h3",{id:"语法-2"},[a("a",{class:"header-anchor",href:"#语法-2","aria-hidden":"true"},"#"),t(" 语法")],-1),Tn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"const"),t(" value "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useContext"),a("span",{class:"token punctuation"},"("),t("myContext"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),Mn=a("blockquote",null,[a("p",null,[a("code",null,"Context"),t("是从某个组件为跟组件树上可用的，所以我门需要创建一个"),a("code",null,"Context")])],-1),In=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"const"),t(" myContext "),a("span",{class:"token operator"},"="),t(" React"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"createContext"),a("span",{class:"token punctuation"},"("),t("initialValue"),a("span",{class:"token punctuation"},")"),t("\n")])])],-1),Un=a("p",null,[t("此时"),a("code",null,"myContext"),t("具有一个"),a("code",null,"Provider"),t("的属性，一般是作为组件树的跟组件")],-1),qn=a("h3",{id:"使用场景-1"},[a("a",{class:"header-anchor",href:"#使用场景-1","aria-hidden":"true"},"#"),t(" 使用场景")],-1),Dn=a("blockquote",null,[a("p",null,"一个主题的切换机制")],-1),zn=a("div",{class:"language-jsx"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),t(" React"),a("span",{class:"token punctuation"},","),t(),a("span",{class:"token punctuation"},"{"),t(" createContext"),a("span",{class:"token punctuation"},","),t(" useContext "),a("span",{class:"token punctuation"},"}"),t(),a("span",{class:"token keyword"},"from"),t(),a("span",{class:"token string"},"'react'"),t("\n\n"),a("span",{class:"token keyword"},"const"),t(" themes "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"{"),t("\n    light"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token punctuation"},"{"),t(" foreground"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'#000000'"),a("span",{class:"token punctuation"},","),t(" background"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'#eeeeee'"),t(),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),t("\n    dark"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token punctuation"},"{"),t(" foreground"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'#ffffff'"),a("span",{class:"token punctuation"},","),t(" background"),a("span",{class:"token operator"},":"),t(),a("span",{class:"token string"},"'#222222'"),t(),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token keyword"},"const"),t(" ThemeContext "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"createContext"),a("span",{class:"token punctuation"},"("),t("themes"),a("span",{class:"token punctuation"},"."),t("light"),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token keyword"},"const"),t(),a("span",{class:"token function-variable function"},"Thems"),t(),a("span",{class:"token operator"},"="),t(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token operator"},"=>"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token comment"},"// 整个应用使用 Provider 作为根组件"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),a("span",{class:"token class-name"},"ThemeContext.Provider")]),t(),a("span",{class:"token attr-name"},"store"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),t("themes"),a("span",{class:"token punctuation"},"."),t("dark"),a("span",{class:"token punctuation"},"}")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),a("span",{class:"token class-name"},"ThemeContext.Provider")]),a("span",{class:"token punctuation"},">")]),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 在Toolbar组件中使用一个会使用theme的button"),t("\n"),a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"Toolbar"),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"props"),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("div")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),a("span",{class:"token class-name"},"ThemeButton")]),t(),a("span",{class:"token punctuation"},"/>")]),a("span",{class:"token plain-text"},"\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("div")]),a("span",{class:"token punctuation"},">")]),t("\n    "),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n\n"),a("span",{class:"token comment"},"// 在ThemeButton中使用useContext来获取当前的主题"),t("\n"),a("span",{class:"token keyword"},"function"),t(),a("span",{class:"token function"},"ThemeButton"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(),a("span",{class:"token punctuation"},"{"),t("\n    "),a("span",{class:"token keyword"},"const"),t(" theme "),a("span",{class:"token operator"},"="),t(),a("span",{class:"token function"},"useContext"),a("span",{class:"token punctuation"},"("),t("ThemeContext"),a("span",{class:"token punctuation"},")"),t("\n    "),a("span",{class:"token keyword"},"return"),t(),a("span",{class:"token punctuation"},"("),t("\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),t("button")]),t("\n            "),a("span",{class:"token attr-name"},"style"),a("span",{class:"token script language-javascript"},[a("span",{class:"token script-punctuation punctuation"},"="),a("span",{class:"token punctuation"},"{"),a("span",{class:"token punctuation"},"{"),t(" background"),a("span",{class:"token operator"},":"),t(" theme"),a("span",{class:"token punctuation"},"."),t("background"),a("span",{class:"token punctuation"},","),t(" color"),a("span",{class:"token operator"},":"),t(" theme"),a("span",{class:"token punctuation"},"."),t("foreground "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},"}")]),t("\n        "),a("span",{class:"token punctuation"},">")]),a("span",{class:"token plain-text"},"\n            i am styled by theme context\n        "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),t("button")]),a("span",{class:"token punctuation"},">")]),t("\n    "),a("span",{class:"token punctuation"},")"),t("\n"),a("span",{class:"token punctuation"},"}"),t("\n"),a("span",{class:"token keyword"},"export"),t(),a("span",{class:"token keyword"},"default"),t(" Toolbar\n")])])],-1);e.render=function(a,t,o,e,Ln,Bn){return n(),s("div",null,[c,l,p,u,k,i,r,d,f,g,m,h,w,y,v,b,x,C,S,j,E,R,T,M,I,U,q,D,z,L,B,P,F,K,W,A,H,O,_,V,$,G,J,N,Q,X,Y,Z,nn,sn,an,tn,on,en,cn,ln,pn,un,kn,rn,dn,fn,gn,mn,hn,wn,yn,vn,bn,xn,Cn,Sn,jn,En,Rn,Tn,Mn,In,Un,qn,Dn,zn])};export default e;export{o as __pageData};
