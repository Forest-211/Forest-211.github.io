import{o as l,c as n,d as t,e}from"./app.ee89e8a3.js";const u='{"title":"Go Web开发基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"Web程序运行原理","slug":"web程序运行原理"},{"level":3,"title":"Web基本原理","slug":"web基本原理"},{"level":2,"title":"HTTP","slug":"http"},{"level":3,"title":"简介","slug":"简介"},{"level":3,"title":"HTTP的主要特点","slug":"http的主要特点"},{"level":3,"title":"URI","slug":"uri"},{"level":3,"title":"URI与URL的区别","slug":"uri与url的区别"},{"level":3,"title":"HTTP请求","slug":"http请求"},{"level":3,"title":"HTTP响应","slug":"http响应"}],"relativePath":"go/12-Web开发基础.md","lastUpdated":1627978853572}',a={},r=t("h1",{id:"go-web开发基础"},[t("a",{class:"header-anchor",href:"#go-web开发基础","aria-hidden":"true"},"#"),e(" Go Web开发基础")],-1),o=t("p",null,"实现一个简单的hello future的接口：",-1),d=t("div",{class:"language-go"},[t("pre",null,[t("code",null,[t("span",{class:"token keyword"},"package"),e(" main\n\n"),t("span",{class:"token keyword"},"import"),e(),t("span",{class:"token punctuation"},"("),e("\n\t"),t("span",{class:"token string"},'"fmt"'),e("\n\t"),t("span",{class:"token string"},'"net/http"'),e("\n"),t("span",{class:"token punctuation"},")"),e("\n\n"),t("span",{class:"token keyword"},"func"),e(),t("span",{class:"token function"},"main"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n\t"),t("span",{class:"token comment"},"// 启动一个http服务"),e("\n\tserver "),t("span",{class:"token operator"},":="),e(),t("span",{class:"token operator"},"&"),e("http"),t("span",{class:"token punctuation"},"."),e("Server"),t("span",{class:"token punctuation"},"{"),e("\n\t\tAddr"),t("span",{class:"token punctuation"},":"),e(),t("span",{class:"token string"},'"0.0.0.0:8081"'),t("span",{class:"token punctuation"},","),e("\n\t"),t("span",{class:"token punctuation"},"}"),e("\n\n\t"),t("span",{class:"token comment"},"// 服务响应"),e("\n\thttp"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"HandleFunc"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},'"/"'),t("span",{class:"token punctuation"},","),e(" helloFuture"),t("span",{class:"token punctuation"},")"),e("\n\n\t"),t("span",{class:"token comment"},"// 监听端口并启动服务"),e("\n\tserver"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"ListenAndServe"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n\n"),t("span",{class:"token keyword"},"func"),e(),t("span",{class:"token function"},"helloFuture"),t("span",{class:"token punctuation"},"("),e("w http"),t("span",{class:"token punctuation"},"."),e("ResponseWriter"),t("span",{class:"token punctuation"},","),e(" r "),t("span",{class:"token operator"},"*"),e("http"),t("span",{class:"token punctuation"},"."),e("Request"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n\tfmt"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"Fprintf"),t("span",{class:"token punctuation"},"("),e("w"),t("span",{class:"token punctuation"},","),e(),t("span",{class:"token string"},'"hello future"'),t("span",{class:"token punctuation"},")"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])])],-1),s=t("p",null,[e("在文件所在目录打开命令行终端，输入"),t("code",null,"go run main.go"),e("；然后打开浏览器访问"),t("code",null,"http://localhost:8081/"),e("就会打印出如下结果：")],-1),p=t("img",{src:"/assets/image-20210801111906903.ba5931fe.png",alt:"image-20210801111906903",style:{zoom:"50%"}},null,-1),c=t("h2",{id:"web程序运行原理"},[t("a",{class:"header-anchor",href:"#web程序运行原理","aria-hidden":"true"},"#"),e(" Web程序运行原理")],-1),i=t("h3",{id:"web基本原理"},[t("a",{class:"header-anchor",href:"#web基本原理","aria-hidden":"true"},"#"),e(" Web基本原理")],-1),h=t("p",null,[e("在上面的代码示例中，要编写一个基本的web服务程序是很简单的；只需要调用"),t("code",null,"net/http"),e("包中的"),t("code",null,"HandleFunc()"),e("处理函数和"),t("code",null,"ListenAndServe()"),e("函数即可")],-1),T=t("p",null,"Go通过简单的几行代码就可以实现一个web服务器端程序，而且这个web服务器端程序有支持高并发的特性；接下来我们去了解了解web服务器端程序是怎么运行起来的",-1),g=t("h4",{id:"运行原理"},[t("a",{class:"header-anchor",href:"#运行原理","aria-hidden":"true"},"#"),e(" 运行原理")],-1),k=t("p",null,"当我们打开某个网站的页面，浏览器就会发起网络请求获取该页面的资源，我们也可以从控制台看到以下的请求信息：",-1),P=t("img",{src:"/assets/image-20210801115348779.d14219c2.png",alt:"image-20210801115348779",style:{zoom:"50%"}},null,-1),H=t("img",{src:"/assets/image-20210801115202675.b80d0d04.png",alt:"image-20210801115202675",style:{zoom:"50%"}},null,-1),f=t("p",null,"在 Network 面板里，我们能看到所有浏览器发起的网络请求，包括页面、图片、CSS 文件、XHR 请求等，还能看到请求的状态（200 成功、404 找不到、缓存、重定向等等）、耗时、请求头和内容、返回头和内容等",-1),b=t("p",null,"接下来，浏览器会加载页面，同时页面中涉及的外部资源也会根据需要，在特定的时机触发请求下载，包括我们看到的 PNG 图片、JavaScript 文件（这里没有 CSS 样式，是因为样式被直出在html页面内容里了）",-1),R=t("p",null,"回到前面的问题，实际上当我们在浏览器输入网页地址，按下回车键后，浏览器的处理过程如下：",-1),m=t("ul",null,[t("li",null,[t("p",null,"DNS 域名解析（此处涉及 DNS 的寻址过程），找到网页的存放服务器")]),t("li",null,[t("p",null,"浏览器与服务器建立 TCP 连接")]),t("li",null,[t("p",null,"浏览器发起 HTTP 请求")]),t("li",null,[t("p",null,"服务器响应 HTTP 请求，返回该页面的 HTML 内容")]),t("li",null,[t("p",null,"浏览器解析 HTML 代码，并请求 HTML 代码中的资源（如 JavaScript、CSS、图片等，此处可能涉及 HTTP 缓存）")]),t("li",null,[t("p",null,"浏览器对页面进行渲染呈现给用户（此处涉及浏览器的渲染原理）")])],-1),S=t("h4",{id:"dns-解析"},[t("a",{class:"header-anchor",href:"#dns-解析","aria-hidden":"true"},"#"),e(" DNS 解析")],-1),C=t("p",null,"DNS 的全称是 Domain Name System，又称域名系统，它负责把www.baidu.com这样的域名地址翻译成一个 IP（比如14.18.180.206），而客户端与服务器建立 TCP 连接需要通过 IP 通信",-1),U=t("p",null,"让客户端和服务器连接并不是靠域名进行，在网络中每个终端之间实现连接和通信是通过一个唯一的 IP 地址来完成。在建立 TCP 连接前，我们需要找到建立连接的服务器，DNS 的解析过程可以让用户通过域名找到存放文件的服务器",-1),L=t("p",null,"DNS 解析过程会进行递归查询，分别依次尝试从以下途径，按顺序地获取该域名对应的 IP 地址",-1),v=t("ul",null,[t("li",null,[t("p",null,"浏览器缓存")]),t("li",null,[t("p",null,"系统缓存（用户操作系统 Hosts 文件 DNS 缓存）")]),t("li",null,[t("p",null,"路由器缓存")]),t("li",null,[t("p",null,"互联网服务提供商 DNS 缓存（联通、移动、电信等互联网服务提供商的 DNS 缓存服务器）")]),t("li",null,[t("p",null,"根域名服务器")]),t("li",null,[t("p",null,"顶级域名服务器")]),t("li",null,[t("p",null,"主域名服务器")])],-1),I=t("p",null,"DNS 解析过程会根据上述步骤进行递归查询，如果当前步骤没查到，则自动跳转到到下一步骤通过下一个 DNS 服务器进行查找。如果最终依然没找到，浏览器便会将页面响应为打开失败",-1),w=t("p",null,"除此之外，我们在前后端联调过程中也常常需要配置 HOST，这个过程便是修改了浏览器缓存或是系统缓存。通过将特定域名指向我们自身的服务器 IP 地址，便可以实现通过域名访问本地环境、测试环境、预发布环境的服务器资源",-1),A=t("p",null,[e("那为什么需要配置域名 HOST，而不直接使用 IP 地址进行访问呢？这是因为"),t("em",null,[t("strong",null,"浏览器的同源策略会导致跨域问题")])],-1),E=t("p",null,[e("同源策略要求，只有当请求的协议、域名和端口都相同的情况下，我们才可以访问当前页面的 Cookie/LocalStorage/IndexDB、获取和操作 DOM 节点，以及发送 Ajax 请求。"),t("strong",null,"通过同源策略的限制，可以避免恶意的攻击者盗取用户信息，从而可以保证用户信息的安全")],-1),y=t("p",null,"对于非同源的请求，我们常常称为跨域请求，需要进行跨域处理。常见的跨域解决方案有这几种",-1),W=t("ul",null,[t("li",null,[t("p",null,[e("使用"),t("code",null,"document.domain + iframe"),e("：只有在主域相同的时候才能使用该方法")])]),t("li",null,[t("p",null,[e("动态创建"),t("code",null," script(JSONP)"),e("：通过指定回调函数以及函数的传参数据，让页面执行相应的脚本内容")])]),t("li",null,[t("p",null,[e("使用"),t("code",null,"location.hash + iframe"),e("：利用"),t("code",null,"location.hash"),e("来进行传值")])]),t("li",null,[t("p",null,[e("使用"),t("code",null,"window.name + iframe"),e("：原理是"),t("code",null,"window.name"),e("值在不同的页面（甚至不同域名）加载后依旧存在")])]),t("li",null,[t("p",null,[e("使用"),t("code",null,"window.postMessage()"),e("实现跨域通信")])]),t("li",null,[t("p",null,[e("使用跨域资源共享 "),t("code",null,"CORS（Cross-origin resource sharing）")])]),t("li",null,[t("p",null,[e("使用"),t("code",null," Websockets")])])],-1),z=t("p",null,[e("其中，CORS 作为现在的主流解决方案，它允许浏览器向跨源服务器，发出 "),t("code",null,"XMLHttpRequest "),e("请求，从而克服了 Ajax 只能同源使用的限制。实现 CORS 通信的关键是服务器，只要服务端实现了 CORS 接口，就可以进行跨源通信")],-1),N=t("p",null,"DNS 解析完成后，浏览器获得了服务端的 IP 地址，接下来便可以向服务端发起 HTTP 请求。目前大多数 HTTP 请求都建立在 TCP 连接上，因此客户端和服务端会先建立起 TCP 连接",-1),O=t("div",{class:"tip custom-block"},[t("p",{class:"custom-block-title"},"TIP"),t("p",null,"客户端与服务端之间的通信是非持久连接的，即服务器端在发送了这个应答后就会与客户端断开连接")],-1),G=t("h2",{id:"http"},[t("a",{class:"header-anchor",href:"#http","aria-hidden":"true"},"#"),e(" HTTP")],-1),D=t("h3",{id:"简介"},[t("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),e(" 简介")],-1),x=t("p",null,"HTTP(全称：Hyper Text Transfer Protocol，即超文本传输协议 )；是一个简单的请求-响应协议，通常运行在TCP协议上。它指定了客户端可能发送给服务端什么样的消息，以及得到什么样的响应。请求和响应消息的头是以ASCII码形式给出的；而消息内容则是以类似MIME的格式给出的",-1),_=t("p",null,"在HTTP传输过程中，客户端总是通过建立一个连接与发送一个HTTP请求来发起一个事务。服务端不能主动与客户端联系，也不能给客户端发出一个回调连接。客户端与服务端都可以提前中断一个连接",-1),M=t("h3",{id:"http的主要特点"},[t("a",{class:"header-anchor",href:"#http的主要特点","aria-hidden":"true"},"#"),e(" HTTP的主要特点")],-1),q=t("ul",null,[t("li",null,"简单快速：客户端向服务端发起请求服务时，只需要传送方法和路径即可。常用的请求方式有GET、HEAD和POST。美中方法规定了客户端与服务端联系的类型"),t("li",null,[e("灵活：HTTP允许输入任意类型的数据对象。正在传输的类型有"),t("code",null,"Content-Type"),e("加以标记")]),t("li",null,"无连接：无连接的含义是限制每次连接只处理一个请求；服务器在处理完客户端的请求并应答后就断开连接"),t("li",null,"无状态：HTTP是无状态协议。无状态协议是指协议对事务处理没有记忆能力")],-1),F=t("h3",{id:"uri"},[t("a",{class:"header-anchor",href:"#uri","aria-hidden":"true"},"#"),e(" URI")],-1),j=t("p",null,"HTTP使用统一资源标识符URI(即Uniform Resouerce Identifires)来传输数据和建立连接",-1),B=t("p",null,"统一资源定位符URL(Uniform Resource Locator)是一种特殊类型的URI，它包含了用与查找某个资源的足够信息，在互联网上用来标识某一处的地址",-1),V=t("p",null,"就拿一个在GitHub上搜索资源的网络地址进行解析：",-1),J=t("div",{class:"language-go"},[t("pre",null,[t("code",null,[e("https"),t("span",{class:"token punctuation"},":"),t("span",{class:"token operator"},"/"),t("span",{class:"token operator"},"/"),e("github"),t("span",{class:"token punctuation"},"."),e("com"),t("span",{class:"token operator"},"/"),e("search?o"),t("span",{class:"token operator"},"="),e("desc"),t("span",{class:"token operator"},"&"),e("q"),t("span",{class:"token operator"},"="),t("span",{class:"token keyword"},"go"),t("span",{class:"token operator"},"&"),e("s"),t("span",{class:"token operator"},"="),e("stars"),t("span",{class:"token operator"},"&"),t("span",{class:"token keyword"},"type"),t("span",{class:"token operator"},"="),e("Repositories\n")])])],-1),X=t("p",null,"一个完整的URL的组成包含以下几部分：",-1),Y=t("ul",null,[t("li",null,[t("p",null,"协议部分"),t("p",null,[e("上面示例中的协议就是"),t("code",null,"https"),e("，表示该网页使用的协议是HTTPS；在internet中可以使用多种协议，如：HTTP、HTTPS、FTP、WS等等")])]),t("li",null,[t("p",null,"域名部分"),t("p",null,"该URL的域名就是https://github.com。在URL中，也可以把IP地址作为域名使用")]),t("li",null,[t("p",null,"端口部分"),t("p",null,[e("跟在域名后面的便是端口，域名与端口之间使用英文的冒号"),t("code",null,":"),e("隔开。如果省略端口部分，则采用默认端口80，也可以自定义端口部分，比如："),t("code",null,"https://www.github.com:9090")])]),t("li",null,[t("p",null,"参数部分"),t("p",null,[e("从"),t("code",null,"?"),e("处开始到最后的都是参数，多个参数使用"),t("code",null,"&"),e("连接。上面网址示例中，参数就是"),t("code",null,"o=desc&q=go&s=stars&type=Repositories")])])],-1),Z=t("h3",{id:"uri与url的区别"},[t("a",{class:"header-anchor",href:"#uri与url的区别","aria-hidden":"true"},"#"),e(" URI与URL的区别")],-1),K=t("p",null,"URI可用来唯一标识一个资源。Web上的所有可用资源，如HTLM、图像、视频、程序等，都是通过一个URI来定位的；",-1),Q=t("p",null,"URI一般由三部分组成：",-1),$=t("ul",null,[t("li",null,"访问资源的命名机制"),t("li",null,"存放资源的主机名"),t("li",null,"资源自身的名称，由路径表示，着重抢到资源")],-1),ll=t("p",null,"URL是一种具体的URI，即URL不仅可以用来标识一个资源，而且还指明了如何定位这个资源。URL是互联网上用来描述信息资源的字符串，主要用在各种WWW客户端程序和服务器程序上。URL可以用一种统一格式来描述各种信息资源，包含文件、服务器的地址和目录等等",-1),nl=t("p",null,"URL一般由三部分组成：",-1),tl=t("ul",null,[t("li",null,"协议，又称服务方式"),t("li",null,"存有该资源的主IP地址，有时也包含端口号"),t("li",null,"主机资源的具体地址，如目录和文件名等")],-1),el=t("h3",{id:"http请求"},[t("a",{class:"header-anchor",href:"#http请求","aria-hidden":"true"},"#"),e(" HTTP请求")],-1),ul=t("p",null,"客户端发送到服务器端的请求消息由请求行(Reques tLine)、请求头(Request Hander)、请求体(Request Body)组成",-1),al=t("h4",{id:"请求行"},[t("a",{class:"header-anchor",href:"#请求行","aria-hidden":"true"},"#"),e(" 请求行")],-1),rl=t("p",null,"请求行由请求方法、URI、HTTP协议/协议版本这三部分组成",-1),ol=t("p",null,"在日常网络请求中，最常用的请求方法有两种：GET和POST",-1),dl=t("p",null,[e("在浏览器中输入URL按"),t("code",null,"enter"),e("键后，便发起了一个GET请求，请求的参数直接包含在URL中；POST请求大都在提交表单是发送")],-1),sl=t("h5",{id:"get和post的主要区别："},[t("a",{class:"header-anchor",href:"#get和post的主要区别：","aria-hidden":"true"},"#"),e(" GET和POST的主要区别：")],-1),pl=t("ul",null,[t("li",null,"GET请求中的参数包含在URL中，数据可以在URL中看到；而POST请求的URL不包含这些参数，参数都是包含在请求体中"),t("li",null,"一个GET请求提交的数据最多只有1024byte，而POST则没有限制")],-1),cl=t("h4",{id:"常用的请求方法："},[t("a",{class:"header-anchor",href:"#常用的请求方法：","aria-hidden":"true"},"#"),e(" 常用的请求方法：")],-1),il=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"请求方法"),t("th",null,"描述")])]),t("tbody",null,[t("tr",null,[t("td",null,"GET"),t("td",null,"请求页面，并返回页面内容")]),t("tr",null,[t("td",null,"POST"),t("td",null,"向指定资源提交数据(表单或者文件上传)")]),t("tr",null,[t("td",null,"HEAD"),t("td",null,"类似GET请求，只不过返回的响应体中没有具体的内容，用于获取报头")]),t("tr",null,[t("td",null,"PUT"),t("td",null,"从客户端型服务端传送的数据取代(覆盖)指定文档(资源)的内容")]),t("tr",null,[t("td",null,"DELETE"),t("td",null,"请求服务端删除置顶内容")]),t("tr",null,[t("td",null,"OPTIONS"),t("td",null,"允许客户端查看服务器的性能")]),t("tr",null,[t("td",null,"CONNECT"),t("td",null,"把服务器当作跳板，让服务器代替客户端访问网页")]),t("tr",null,[t("td",null,"TRACE"),t("td",null,"显示服务器收到的请求，主要用于测试或诊断")])])],-1),hl=t("h4",{id:"请求头"},[t("a",{class:"header-anchor",href:"#请求头","aria-hidden":"true"},"#"),e(" 请求头")],-1),Tl=t("p",null,"请求头包含服务器要使用的附加信息，比较重要的信息有Cookie、Referer、User-Agent等。常用的HTTP请求头信息如下表：",-1),gl=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"请求头"),t("th",null,"示例"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"Accept"),t("td",null,"Accept:text/plain,text/html"),t("td",null,"指定客户端能够接受的内容类型")]),t("tr",null,[t("td",null,"Accept-Charset"),t("td",null,"Accept-Charset:iso-8859-5"),t("td",null,"浏览器可以接受的字符串编码集")]),t("tr",null,[t("td",null,"Accept-Encoding"),t("td",null,"Accept-Encoding: gzip, deflate, br"),t("td",null,"指定浏览器可以支持的Web服务器返回内容压缩编码类型")]),t("tr",null,[t("td",null,"Accept-Language"),t("td",null,"Accept-Language: en-US,en;q=0.5"),t("td",null,"浏览器可接受的语言")]),t("tr",null,[t("td",null,"Accept-Ranges"),t("td",null,"Accept-Ranges: bytes"),t("td",null,"用于定义范围请求的单位")]),t("tr",null,[t("td",null,"Authorization"),t("td",null,"Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l"),t("td",null,"用于验证用户代理身份的凭证")]),t("tr",null,[t("td",null,"Cache-Control"),t("td",null,"Cache-control: no-cache"),t("td",null,"用于在http请求和响应中，通过指定指令来实现缓存机制")]),t("tr",null,[t("td",null,"Connection"),t("td",null,"Connection: keep-alive"),t("td",null,"决定当前的事务完成后，是否会关闭网络连接")]),t("tr",null,[t("td",null,"Cookie"),t("td",null,"Cookie: name=value; name2=value2;"),t("td",null,"在发送HTTP请求时，会把保存在该请求域名下的所有cookie值一起发送给Web服务器")]),t("tr",null,[t("td",null,"Content-Length"),t("td",null,"Content-Length:512"),t("td",null,"用来指明发送给接收方的消息主体的大小，即用十进制数字表示的八位元组的数目。")])])],-1),kl=t("h4",{id:"请求体"},[t("a",{class:"header-anchor",href:"#请求体","aria-hidden":"true"},"#"),e(" 请求体")],-1),Pl=t("p",null,"请求体是指HTTP请求中传递数据的实体，常用于POST、PUT等请求体中",-1),Hl=t("h3",{id:"http响应"},[t("a",{class:"header-anchor",href:"#http响应","aria-hidden":"true"},"#"),e(" HTTP响应")],-1),fl=t("p",null,"HTTP响应有服务器端返回给客户端，可以分为三个部分：响应状态码(Response Code)、响应头(Response Headers)和响应体(Response Body)",-1),bl=t("h4",{id:"响应状态码"},[t("a",{class:"header-anchor",href:"#响应状态码","aria-hidden":"true"},"#"),e(" 响应状态码")],-1),Rl=t("p",null,[e("HTTP 响应状态代码指示特定 "),t("a",{href:"https://developer.mozilla.org/zh-cn/HTTP",target:"_blank",rel:"noopener noreferrer"},"HTTP"),e(" 请求是否已成功完成。响应分为五类：信息响应("),t("code",null,"100"),e("–"),t("code",null,"199"),e(")，成功响应("),t("code",null,"200"),e("–"),t("code",null,"299"),e(")，重定向("),t("code",null,"300"),e("–"),t("code",null,"399"),e(")，客户端错误("),t("code",null,"400"),e("–"),t("code",null,"499"),e(")和服务器错误 ("),t("code",null,"500"),e("–"),t("code",null,"599"),e(")。状态代码由 "),t("a",{href:"https://tools.ietf.org/html/rfc2616#section-10",target:"_blank",rel:"noopener noreferrer"},"section 10 of RFC 2616"),e("定义")],-1),ml=t("ul",null,[t("li",null,"信息响应")],-1),Sl=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"状态码"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"100"),t("td",null,"临时响应，客户端应该继续请求，如果已经完成，则忽略它。")]),t("tr",null,[t("td",null,"101"),t("td",null,[e("响应客户端的 "),t("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade",target:"_blank",rel:"noopener noreferrer"},"Upgrade (en-US)"),e(" 请求头发送的，并且指示服务器也正在切换的协议。")])]),t("tr",null,[t("td",null,"102"),t("td",null,"表示服务器已收到并正在处理该请求，但没有响应可用。")]),t("tr",null,[t("td",null,"103"),t("td",null,[e("用于与"),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Link",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Link")]),e(" 链接头一起使用，以允许用户代理在服务器仍在准备响应时开始预加载资源。")])])])],-1),Cl=t("ul",null,[t("li",null,"成功响应")],-1),Ul=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"状态码"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"200"),t("td",null,[e("请求成功。成功的含义取决于 HTTP 方法："),t("strong",null,"GET"),e("：资源已被提取并在消息正文中传输。 "),t("strong",null,"HEAD"),e("：实体标头位于消息正文中。 "),t("strong",null,"POST"),e("：描述动作结果的资源在消息体中传输。 "),t("strong",null,"TRACE"),e("：消息正文包含服务器收到的请求消息。")])]),t("tr",null,[t("td",null,"201"),t("td",null,"该请求已成功，并因此创建了一个新的资源。这通常是在 POST 请求，或是某些 PUT 请求之后返回的响应。")]),t("tr",null,[t("td",null,"202"),t("td",null,"请求已经接收到，但还未响应，没有结果。")]),t("tr",null,[t("td",null,"203"),t("td",null,"服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。")]),t("tr",null,[t("td",null,"204"),t("td",null,"服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。")]),t("tr",null,[t("td",null,"205"),t("td",null,"服务器成功处理了请求，且没有返回任何内容。")]),t("tr",null,[t("td",null,"206"),t("td",null,"服务器已经成功处理了部分 GET 请求。")]),t("tr",null,[t("td",null,"207"),t("td",null,"由 WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个 XML 消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。")]),t("tr",null,[t("td",null,"208"),t("td",null,"在 DAV 里面使用: propstat 响应元素以避免重复枚举多个绑定的内部成员到同一个集合。")]),t("tr",null,[t("td",null,"226"),t("td",null,"服务器已经完成了对资源的 GET 请求，并且响应是对当前实例应用的一个或多个实例操作结果的表示。")])])],-1),Ll=t("ul",null,[t("li",null,"重定向")],-1),vl=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"状态码"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"300"),t("td",null,"被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。")]),t("tr",null,[t("td",null,"301"),t("td",null,"被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。")]),t("tr",null,[t("td",null,"302"),t("td",null,"请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在 Cache-Control 或 Expires 中进行了指定的情况下，这个响应才是可缓存的。")]),t("tr",null,[t("td",null,"303"),t("td",null,"对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的 POST 请求输出重定向到一个新的资源。")]),t("tr",null,[t("td",null,"304"),t("td",null,"如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304 响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。")]),t("tr",null,[t("td",null,"305"),t("td",null,"被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立 305 响应。")]),t("tr",null,[t("td",null,"307"),t("td",null,"请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在 Cache-Control 或 Expires 中进行了指定的情况下，这个响应才是可缓存的。")]),t("tr",null,[t("td",null,"308"),t("td",null,[e("这意味着资源现在永久位于由 "),t("code",null,"Location:"),e(" HTTP Response 标头指定的另一个 URI。 这与 "),t("code",null,"301 Moved Permanently HTTP"),e(" 响应代码具有相同的语义，但用户代理不能更改所使用的 HTTP 方法：如果在第一个请求中使用 "),t("code",null,"POST"),e("，则必须在第二个请求中使用 "),t("code",null,"POST"),e("。")])])])],-1),Il=t("ul",null,[t("li",null,"客户端响应")],-1),wl=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"状态码"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"400"),t("td",null,"1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。2、请求参数有误。")]),t("tr",null,[t("td",null,"401"),t("td",null,"当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么 401 响应代表着服务器验证已经拒绝了那些证书。如果 401 响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。")]),t("tr",null,[t("td",null,"402"),t("td",null,[e("此响应码保留以便将来使用，创造此响应码的最初目的是用于数字支付系统，然而"),t("em",null,[t("strong",null,"现在并未使用")]),e("。")])]),t("tr",null,[t("td",null,"403"),t("td",null,"服务器已经理解请求，但是拒绝执行它。")]),t("tr",null,[t("td",null,"404"),t("td",null,"请求失败，请求所希望得到的资源未被在服务器上发现。")]),t("tr",null,[t("td",null,"405"),t("td",null,"请求行中指定的请求方法不能被用于请求相应的资源。")]),t("tr",null,[t("td",null,"406"),t("td",null,"请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。")]),t("tr",null,[t("td",null,"407"),t("td",null,"与 401 响应类似，只不过客户端必须在代理服务器上进行身份验证。")]),t("tr",null,[t("td",null,"408"),t("td",null,"请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。")]),t("tr",null,[t("td",null,"409"),t("td",null,"由于和被请求的资源的当前状态之间存在冲突，请求无法完成。")]),t("tr",null,[t("td",null,"410"),t("td",null,"被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。")]),t("tr",null,[t("td",null,"411"),t("td",null,[e("服务器拒绝在没有定义 "),t("code",null,"Content-Length"),e(" 头的情况下接受请求。")])]),t("tr",null,[t("td",null,"412"),t("td",null,"服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。")]),t("tr",null,[t("td",null,"413"),t("td",null,"服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。")]),t("tr",null,[t("td",null,"414"),t("td",null,"请求的 URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。")]),t("tr",null,[t("td",null,"415"),t("td",null,"对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。")]),t("tr",null,[t("td",null,"416"),t("td",null,"如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回 416 状态码。")]),t("tr",null,[t("td",null,"417"),t("td",null,[e("此响应代码意味着服务器无法满足 "),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expect",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Expect")]),e(" 请求标头字段指示的期望值。")])]),t("tr",null,[t("td",null,"418"),t("td")]),t("tr",null,[t("td",null,"421"),t("td",null,"该请求针对的是无法产生响应的服务器。 这可以由服务器发送，该服务器未配置为针对包含在请求 URI 中的方案和权限的组合产生响应。")]),t("tr",null,[t("td",null,"422"),t("td",null,"请求格式良好，但由于语义错误而无法遵循")]),t("tr",null,[t("td",null,"423"),t("td",null,"正在访问的资源被锁定。")]),t("tr",null,[t("td",null,"424"),t("td",null,"由于先前的请求失败，所以此次请求失败。")]),t("tr",null,[t("td",null,"425"),t("td",null,"服务器不愿意冒着风险去处理可能重播的请求。")]),t("tr",null,[t("td",null,"426"),t("td",null,"服务器拒绝使用当前协议执行请求，但可能在客户机升级到其他协议后愿意这样做。")]),t("tr",null,[t("td",null,"428"),t("td",null,"原始服务器要求该请求是有条件的。 旨在防止“丢失更新”问题，即客户端获取资源状态，修改该状态并将其返回服务器，同时第三方修改服务器上的状态，从而导致冲突。")]),t("tr",null,[t("td",null,"429"),t("td",null,"用户在给定的时间内发送了太多请求")]),t("tr",null,[t("td",null,"431"),t("td",null,"服务器不愿意处理请求，因为它的 请求头字段太大（ Request Header Fields Too Large）。 请求可以在减小请求头字段的大小后重新提交。")]),t("tr",null,[t("td",null,"451"),t("td",null,"用户请求非法资源，例如：由政府审查的网页。")])])],-1),Al=t("ul",null,[t("li",null,"服务端响应")],-1),El=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"状态码"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"500"),t("td",null,"服务器遇到了不知道如何处理的情况。")]),t("tr",null,[t("td",null,"501"),t("td",null,[e("此请求方法不被服务器支持且无法被处理。只有"),t("code",null,"GET"),e("和"),t("code",null,"HEAD"),e("是要求服务器支持的，它们必定不会返回此错误代码。")])]),t("tr",null,[t("td",null,"502"),t("td",null,"此错误响应表明服务器作为网关需要得到一个处理这个请求的响应，但是得到一个错误的响应。")]),t("tr",null,[t("td",null,"503"),t("td",null,"服务器没有准备好处理请求。 常见原因是服务器因维护或重载而停机。")]),t("tr",null,[t("td",null,"504"),t("td",null,"当服务器作为网关，不能及时得到响应时返回此错误代码。")]),t("tr",null,[t("td",null,"505"),t("td",null,"服务器不支持请求中所使用的 HTTP 协议版本。")]),t("tr",null,[t("td",null,"506"),t("td",null,"服务器有一个内部配置错误：对请求的透明内容协商导致循环引用。")]),t("tr",null,[t("td",null,"507"),t("td",null,"服务器有内部配置错误：所选的变体资源被配置为参与透明内容协商本身，因此不是协商过程中的适当端点。")]),t("tr",null,[t("td",null,"508"),t("td",null,"服务器在处理请求时检测到无限循环。")]),t("tr",null,[t("td",null,"510"),t("td",null,"客户端需要对请求进一步扩展，服务器才能实现它。服务器会回复客户端发出扩展请求所需的所有信息。")]),t("tr",null,[t("td",null,"511"),t("td",null,"511 状态码指示客户端需要进行身份验证才能获得网络访问权限。")])])],-1),yl=t("h4",{id:"响应头"},[t("a",{class:"header-anchor",href:"#响应头","aria-hidden":"true"},"#"),e(" 响应头")],-1),Wl=t("p",null,[t("strong",null,"响应头（Response header）"),e(" 可以定义为：被用于http响应中并且和响应消息主体无关的那一类 "),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/HTTP_header",target:"_blank",rel:"noopener noreferrer"},"HTTP header"),e("。像"),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Age",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Age")]),e(", "),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Location",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Location")]),e(" 和 "),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Server",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Server")]),e("都属于响应头，他们被用于描述响应。")],-1),zl=t("p",null,[e("并非所有出现在响应中的http header都属于响应头，例如"),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length",target:"_blank",rel:"noopener noreferrer"},[t("code",null,"Content-Length")]),e("就是一个代表响应体消息大小的"),t("a",{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header",target:"_blank",rel:"noopener noreferrer"},"entity header"),e("，虽然你也可以把它叫做响应头。")],-1),Nl=t("h4",{id:"响应体"},[t("a",{class:"header-anchor",href:"#响应体","aria-hidden":"true"},"#"),e(" 响应体")],-1),Ol=t("p",null,"响应体是HTTP请求返回的内容；响应的正文数据都在响应体中。比如：在请求网页时，响应体就是网页的HTML代码；在请求一张图片时，响应体就是图片的二进制数据。我们请求网页后，浏览器要解析的内容就是响应体",-1);a.render=function(t,e,u,a,Gl,Dl){return l(),n("div",null,[r,o,d,s,p,c,i,h,T,g,k,P,H,f,b,R,m,S,C,U,L,v,I,w,A,E,y,W,z,N,O,G,D,x,_,M,q,F,j,B,V,J,X,Y,Z,K,Q,$,ll,nl,tl,el,ul,al,rl,ol,dl,sl,pl,cl,il,hl,Tl,gl,kl,Pl,Hl,fl,bl,Rl,ml,Sl,Cl,Ul,Ll,vl,Il,wl,Al,El,yl,Wl,zl,Nl,Ol])};export default a;export{u as __pageData};
